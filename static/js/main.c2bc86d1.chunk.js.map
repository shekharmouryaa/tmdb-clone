{"version":3,"sources":["components/Footer.js","Store/store.js","API/api.js","components/LoadingSkeleton.js","components/Free to Watch.js","components/Trending.js","components/WhatsPopulars.js","components/HomeContent.js","components/Navbar.js","App.js","index.js"],"names":["Footer","className","width","src","alt","useStore","create","devtools","set","populars","topRated","trending","allMovies","topRatedMovies","pagenumber","currenttext","favouritelist","loading","genres","currentgenre","newmovies","genresid","trailerKey","modalIsOpen","setPopulars","values","settopRated","setTrending","setAllMovies","setTopRatedMovies","setPagenumber","state","setLoading","setCurrenttext","value","setFavouritelist","setgenres","setcurrentgenre","setnewmovies","setgenresid","setTrailerKey","openModal","closeModal","API_KEY","axios","defaults","baseURL","customHeaders","defaultErrorHandler","getTrendingDay","a","get","params","api_key","language","data","getTrendingWeek","getInTheaters","getPopularMovies","page","getPopularTvShows","getFreeMovies","sort_by","include_video","include_adult","with_watch_monetization_types","getFreeTvShow","getOnRent","LoadingSkeleton","baseColor","highlightColor","Array","map","e","i","style","margin","duration","direction","height","count","FreeToWatch","useState","active","setActive","useEffect","then","movies","concat","results","onClick","tv","length","sort","moviesobject","poster_path","percent","vote_average","linearGradient","colorSlice","colorCircle","fontColor","fontSize","fontWeight","size","cut","rotation","opacity","fill","unit","textPosition","name","title","release_date","first_air_date","display","Trending","items","WhatsPopulars","console","log","HomeContent","backgroundImage","img","backdrop_path","Math","floor","random","marginTop","onSubmit","preventDefault","type","placeholder","Navbar","to","border","borderRadius","padding","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c2bc86d1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer className=\"container-fluid\">\r\n      <div className=\"footer\">\r\n        <div className=\"footer-items \">\r\n          <img width=\"100px\" \r\n          src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg\" \r\n          alt=\"logo\" />\r\n          <p className='footer-btn'>join the community</p>\r\n        </div>\r\n        <div className=\"footer-items\">\r\n          <h3>COMMUNITY</h3>\r\n          <p> Guidelines</p>\r\n          <p> Discussions</p>\r\n          <p> Leaderboard </p>\r\n          <p> Twitter </p>\r\n        </div>\r\n        <div className=\"footer-items\">\r\n          <h3>LEGAL</h3>\r\n          <p> Terms of Use</p>\r\n          <p> API Terms of Use</p>\r\n          <p> Support Forums </p>\r\n        </div>\r\n        <div className=\"footer-items\">\r\n          <h3>THE BASICS</h3>\r\n          <p> About TMDB </p>\r\n          <p> Contact Us </p>\r\n          <p> Support Forums </p>\r\n          <p> API </p>\r\n          <p> System Status </p>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n","import create from 'zustand'\r\nimport{devtools} from 'zustand/middleware'\r\n\r\nlet store = (set => ({\r\n    populars:[],\r\n    topRated:[],\r\n    trending:[],\r\n    allMovies: [],\r\n    topRatedMovies: [],\r\n    pagenumber:1,\r\n    currenttext:'',\r\n    favouritelist:[],\r\n    loading:false,\r\n    genres:[],\r\n    currentgenre:'All Genres',\r\n    newmovies:[],\r\n    genresid:[],\r\n    trailerKey:'',\r\n    modalIsOpen:false,\r\n    setPopulars: (values) => set(() => ({ populars: values })),\r\n    settopRated: (values) => set(() => ({ topRated: values })),\r\n    setTrending: (values) => set(() => ({ trending: values })),\r\n    setAllMovies: (values) => set(() => ({ allMovies: values })),\r\n    setTopRatedMovies: (values) => set(() => ({ topRatedMovies: values })),\r\n    setPagenumber: () => set(state => ({ pagenumber: state.pagenumber + 1 })),\r\n    setLoading: () => set(() => ({ loading: true })),\r\n    setCurrenttext: (value) => set(() => ({ currenttext: value })),\r\n    setFavouritelist: (values) => set(() => ({ favouritelist: [...values] })),\r\n    setgenres:(value) => set(() => ({ genres: [...value] })),\r\n    setcurrentgenre:(value) => set(() => ({ currentgenre: value })),\r\n    setnewmovies:(value) => set(() => ({ newmovies: [...value] })),\r\n    setgenresid: (value) => set(() => ({ genresid: [...value] })),\r\n    setTrailerKey:(value) => set(() => ({ trailerKey: value })),\r\n    openModal: () => set(() => ({ modalIsOpen: true})),\r\n    closeModal: () => set(() => ({ modalIsOpen: false}))\r\n}))\r\n\r\nlet useStore;\r\nuseStore = create(devtools(store));\r\nexport default useStore;\r\n\r\n","import axios from \"axios\";\r\n\r\nconst BASE_URL = `https://api.themoviedb.org/3/`;\r\nconst API_KEY = \"bdd243ea847239dc0799805e63e189f0\";\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.defaults.customHeaders = true;\r\naxios.defaults.defaultErrorHandler = true;\r\n\r\n\r\nexport const getTrendingDay = async  () => {\r\n  const data = await axios.get('trending/all/day', {\r\n      params: {\r\n      api_key: API_KEY,\r\n      language: \"hi-IN\",\r\n    },\r\n  })\r\n  return data\r\n};\r\n\r\nexport const getTrendingWeek = async  () => {\r\n  const data = await axios.get('trending/all/week', {\r\n      params: {\r\n      api_key: API_KEY,\r\n    },\r\n  })\r\n  return data\r\n};\r\n\r\nexport const getInTheaters= async  () => {\r\n  const data = await axios.get('/movie/now_playing/', {\r\n      params: {\r\n      api_key: API_KEY,\r\n    },\r\n  })\r\n  return data\r\n};\r\n\r\nexport const getTopRatedMovies = async  () => {\r\n  const data = await axios.get(\"\", {\r\n      params: {\r\n      api_key: API_KEY,\r\n      language: \"en-US\",\r\n      page: 2,\r\n    },\r\n  })\r\n  return data\r\n};\r\n\r\nexport const getPopularMovies = async  (pagenumber) => {\r\n  const data = await axios.get(\"/movie/popular\", {\r\n      params: {\r\n      api_key: API_KEY,\r\n      language: \"en-US\",\r\n      page: pagenumber,\r\n    },\r\n  })\r\n  return data\r\n};\r\nexport const getPopularTvShows = async  (pagenumber) => {\r\n  const data = await axios.get(\"/tv/popular\", {\r\n      params: {\r\n      api_key: API_KEY,\r\n      language: \"en-US\",\r\n      page: pagenumber,\r\n    },\r\n  })\r\n  return data\r\n};\r\nexport const getFreeMovies = async  (pagenumber) => {\r\n  const data = await axios.get(\"/discover/movie/\", {\r\n    params: {\r\n    api_key: API_KEY,\r\n    language: \"en-US\",\r\n    sort_by:\"vote_count.desc\",\r\n    page: pagenumber,\r\n    include_video: \"false\",\r\n    include_adult:\"false\",\r\n    with_watch_monetization_types:\"free\",\r\n  },\r\n  })\r\n  return data\r\n};\r\nexport const getFreeTvShow = async  (pagenumber) => {\r\n  const data = await axios.get(\"/discover/tv/\", {\r\n    params: {\r\n    api_key: API_KEY,\r\n    language: \"en-US\",\r\n    sort_by:\"vote_count.desc\",\r\n    page: pagenumber,\r\n    include_video: \"false\",\r\n    include_adult:\"false\",\r\n    with_watch_monetization_types:\"free\",\r\n  },\r\n  })\r\n  return data\r\n};\r\nexport const getOnRent = async  (pagenumber) => {\r\n  const data = await axios.get(\"/discover/movie/\", {\r\n      params: {\r\n      api_key: API_KEY,\r\n      language: \"en-US\",\r\n      sort_by:\"vote_count.desc\",\r\n      page: pagenumber,\r\n      include_video: \"false\",\r\n      include_adult:\"false\",\r\n      with_watch_monetization_types:\"rent\",\r\n    },\r\n  })\r\n  return data\r\n};\r\nexport const getTrailer = async  (movieid) => {\r\n  const data = await axios.get(`/movie/${movieid}/videos`, {\r\n      params: {\r\n      api_key: API_KEY,\r\n      language: \"en-US\",\r\n    },\r\n  })\r\n  return data.data.results.filter(key => key.type === \"Trailer\")[0].key\r\n};\r\n\r\n\r\n","import React from \"react\";\r\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\n\r\nexport default function LoadingSkeleton() {\r\n  return (\r\n    <SkeletonTheme baseColor=\"#B8B8B8\" highlightColor=\"#C8C8C8\">\r\n      {[...Array(20)].map((e, i) => (\r\n        <div className=\"scroller_wrap\" style={{margin: \"5px 10px\"}}>\r\n          <span key={i}>\r\n            <Skeleton duration={2} direction=\"ltr\" height={225} width={150} />\r\n          </span>\r\n          <span key={i}>\r\n            <Skeleton duration={2} direction=\"ltr\" count={3}/>\r\n          </span>\r\n        </div>\r\n      ))}\r\n    </SkeletonTheme>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport useStore from \"../Store/store\";\r\nimport { getFreeTvShow, getFreeMovies } from \"../API/api\";\r\nimport \"react-loading-skeleton/dist/skeleton.css\";\r\nimport { CircularProgressBar } from \"@tomik23/react-circular-progress-bar\";\r\nimport {} from \"react/cjs/react.production.min\";\r\nimport LoadingSkeleton from \"./LoadingSkeleton\";\r\n\r\nexport default function FreeToWatch() {\r\n  const setLoading = useStore((state) => state.setLoading);\r\n  const pagenumber = useStore((state) => state.pagenumber);\r\n  const topRated = useStore((state) => state.topRated);\r\n  const settopRated = useStore((state) => state.settopRated);\r\n\r\n  const [active, setActive] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getFreeMovies(pagenumber).then((movies) =>\r\n      settopRated(topRated.concat(movies.data.results))\r\n    );\r\n    setLoading();\r\n    setActive(\"movies\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pagenumber]);\r\n\r\n  const getMoviesData = () => {\r\n    getFreeMovies(pagenumber).then((tv) => settopRated(tv.data.results));\r\n    setActive(\"movies\");\r\n  };\r\n  const getTvData = () => {\r\n    getFreeTvShow(pagenumber).then((tv) => settopRated(tv.data.results));\r\n    setActive(\"tv\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\r\n        <div className=\"container-fluid main-content\">\r\n          <div className=\"column_header\">\r\n            <div className=\"HeadingContainer\">\r\n              <span className=\"section-title\">Free To Watch</span>\r\n            </div>\r\n            <div className=\"selector_wrapper \">\r\n              <div\r\n                className={`anchor ${active === \"movies\" ? \"selected\" : null}`}\r\n                onClick={() => getMoviesData()}\r\n              >\r\n                Movies\r\n              </div>\r\n\r\n              <div\r\n                className={`anchor ${active === \"tv\" ? \"selected\" : null}`}\r\n                onClick={() => getTvData()}\r\n              >\r\n                TV Shows\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-horizontal scroller_wrap should_fade\">\r\n            {topRated.length\r\n              ? topRated.sort().map((moviesobject, i) => (\r\n                  <>\r\n                    <div className=\"vertical-card card text-white m-2\" key={i}>\r\n                      <div>\r\n                        <img\r\n                          className=\"movie-card img-fluid\"\r\n                          src={`https://image.tmdb.org/t/p/original${moviesobject.poster_path}`}\r\n                          alt=\"\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"content-details\">\r\n                        <span className=\"circular-progress-bar\">\r\n                          <CircularProgressBar\r\n                            percent={moviesobject.vote_average * 10}\r\n                            linearGradient={[\"#18cdb5\", \"#1fb76d\"]}\r\n                            colorSlice={\"#081c22\"}\r\n                            colorCircle={\"#081c22\"}\r\n                            fontColor={\"#fff\"}\r\n                            fontSize={\"1.8rem\"}\r\n                            fontWeight={400}\r\n                            size={40}\r\n                            cut={0}\r\n                            rotation={-90}\r\n                            opacity={10}\r\n                            fill={\"#032541\"}\r\n                            unit={\"%\"}\r\n                            textPosition={\"0.35em\"}\r\n                          />\r\n                        </span>\r\n                        <div className=\"item-title\">\r\n                          {moviesobject.name || moviesobject.title}\r\n                        </div>\r\n                        <div className=\"item-score\">\r\n                          {moviesobject.release_date ||\r\n                            moviesobject.first_air_date}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                ))\r\n              :<div style={{ display: \"flex\"}}>\r\n              <LoadingSkeleton/>\r\n              </div>}\r\n          </div>\r\n        </div>\r\n      }\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport useStore from \"../Store/store\";\r\nimport { getTrendingDay, getTrendingWeek } from \"../API/api\";\r\nimport \"react-loading-skeleton/dist/skeleton.css\";\r\nimport { CircularProgressBar } from \"@tomik23/react-circular-progress-bar\";\r\nimport {} from \"react/cjs/react.production.min\";\r\nimport LoadingSkeleton from \"./LoadingSkeleton\";\r\n\r\nexport default function Trending() {\r\n  const setLoading = useStore((state) => state.setLoading);\r\n  const pagenumber = useStore((state) => state.pagenumber);\r\n\r\n  const trending = useStore((state) => state.trending);\r\n  const setTrending = useStore((state) => state.setTrending);\r\n\r\n  const [active, setActive] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getTrendingDay(pagenumber).then((movies) =>\r\n      setTrending(trending.concat(movies.data.results))\r\n    );\r\n    setLoading();\r\n    setActive(\"today\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pagenumber]);\r\n\r\n  const getTrendingDayData = () => {\r\n    getTrendingDay(pagenumber).then((items) => setTrending(items.data.results));\r\n    setActive(\"today\");\r\n  };\r\n  const getTrendingWeekData = () => {\r\n    getTrendingWeek(pagenumber).then((items) =>\r\n      setTrending(items.data.results)\r\n    );\r\n    setActive(\"week\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\r\n        <div className=\"container-fluid main-content\">\r\n          <div className=\"column_header\">\r\n            <div className=\"HeadingContainer\">\r\n              <span className=\"section-title\">Trending</span>\r\n            </div>\r\n            <div className=\"selector_wrapper \">\r\n              <div\r\n                className={`anchor ${active === \"today\" ? \"selected\" : null}`}\r\n                onClick={() => getTrendingDayData()}\r\n              >\r\n                Today\r\n              </div>\r\n\r\n              <div\r\n                className={`anchor ${active === \"week\" ? \"selected\" : null}`}\r\n                onClick={() => getTrendingWeekData()}\r\n              >\r\n                This Week\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-horizontal scroller_wrap should_fade\">\r\n            {trending.length ? (\r\n              trending.sort().map((moviesobject, i) => (\r\n                <>\r\n                  <div className=\"vertical-card card text-white m-2\" key={i}>\r\n                    <div>\r\n                      <img\r\n                          className=\"movie-card img-fluid\"\r\n                          src={`https://image.tmdb.org/t/p/original${moviesobject.poster_path}`}\r\n                          alt=\"poster\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"content-details\">\r\n                      <span className=\"circular-progress-bar\">\r\n                        <CircularProgressBar\r\n                          percent={moviesobject.vote_average * 10}\r\n                          linearGradient={[\"#18cdb5\", \"#1fb76d\"]}\r\n                          colorSlice={\"#081c22\"}\r\n                          colorCircle={\"#081c22\"}\r\n                          fontColor={\"#fff\"}\r\n                          fontSize={\"1.8rem\"}\r\n                          fontWeight={400}\r\n                          size={40}\r\n                          cut={0}\r\n                          rotation={-90}\r\n                          opacity={10}\r\n                          fill={\"#032541\"}\r\n                          unit={\"%\"}\r\n                          textPosition={\"0.35em\"}\r\n                        />\r\n                      </span>\r\n                      <div className=\"item-title\">\r\n                        {moviesobject.title || moviesobject.name}\r\n                      </div>\r\n                      <div className=\"item-score\">\r\n                        {moviesobject.release_date ||\r\n                          moviesobject.first_air_date}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              ))\r\n            ) : (\r\n              <div style={{ display: \"flex\" }}>\r\n                <LoadingSkeleton />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      }\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport useStore from \"../Store/store\";\r\nimport {\r\n  getPopularMovies,\r\n  getOnRent,\r\n  getPopularTvShows,\r\n  getInTheaters,\r\n} from \"../API/api\";\r\nimport \"react-loading-skeleton/dist/skeleton.css\";\r\nimport { CircularProgressBar } from \"@tomik23/react-circular-progress-bar\";\r\nimport {} from \"react/cjs/react.production.min\";\r\nimport LoadingSkeleton from \"./LoadingSkeleton\";\r\n\r\nexport default function WhatsPopulars() {\r\n  const setLoading = useStore((state) => state.setLoading);\r\n  const pagenumber = useStore((state) => state.pagenumber);\r\n  const populars = useStore((state) => state.populars);\r\n  const setPopulars = useStore((state) => state.setPopulars);\r\n\r\n  const [active, setActive] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getPopularMovies(pagenumber).then((movies) =>\r\n      setPopulars(populars.concat(movies.data.results))\r\n    );\r\n    setLoading();\r\n    setActive(\"Streaming\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pagenumber]);\r\n\r\n  const getMoviesData = () => {\r\n    getPopularMovies(pagenumber).then((tv) => setPopulars(tv.data.results));\r\n    setActive(\"Streaming\");\r\n  };\r\n  const getTvData = () => {\r\n    getPopularTvShows(pagenumber).then((tv) => setPopulars(tv.data.results));\r\n    setActive(\"tv\");\r\n  };\r\n  const getRentData = () => {\r\n    getOnRent(pagenumber).then((tv) => setPopulars(tv.data.results));\r\n    setActive(\"rent\");\r\n  };\r\n  const getInTheatersData = () => {\r\n    getInTheaters(pagenumber).then((tv) => setPopulars(tv.data.results));\r\n    setActive(\"theater\");\r\n  };\r\n  console.log(\"populars\", populars);\r\n  return (\r\n    <>\r\n      {\r\n        <div className=\"container-fluid main-content\">\r\n          <div className=\"column_header\">\r\n            <div className=\"HeadingContainer\">\r\n              <span className=\"section-title\">What's Popular</span>\r\n            </div>\r\n            <div className=\"selector_wrapper \">\r\n              <div\r\n                className={`anchor ${\r\n                  active === \"Streaming\" ? \"selected\" : \"\"\r\n                }`}\r\n                onClick={() => getMoviesData()}\r\n              >\r\n                Streaming\r\n              </div>\r\n\r\n              <div\r\n                className={`anchor ${active === \"tv\" ? \"selected\" : \"\"}`}\r\n                onClick={() => getTvData()}\r\n              >\r\n                On TV\r\n              </div>\r\n\r\n              <div\r\n                className={`anchor ${active === \"rent\" ? \"selected\" : \"\"}`}\r\n                onClick={() => getRentData()}\r\n              >\r\n                For Rent\r\n              </div>\r\n              <div\r\n                className={`anchor ${active === \"theater\" ? \"selected\" : \"\"}`}\r\n                onClick={() => getInTheatersData()}\r\n              >\r\n                In Theaters\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-horizontal scroller_wrap should_fade\">\r\n            {populars.length\r\n              ? populars.sort().map((moviesobject, i) => (\r\n                  <>\r\n                    <div className=\"vertical-card card text-white m-2\" key={i}>\r\n                      <div>\r\n                        <img\r\n                          className=\"movie-card img-fluid\"\r\n                          src={`https://image.tmdb.org/t/p/original${moviesobject.poster_path}`}\r\n                          alt=\"\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"content-details\">\r\n                        <span className=\"circular-progress-bar\">\r\n                          <CircularProgressBar\r\n                            percent={moviesobject.vote_average * 10}\r\n                            linearGradient={[\"#18cdb5\", \"#1fb76d\"]}\r\n                            colorSlice={\"#081c22\"}\r\n                            colorCircle={\"#081c22\"}\r\n                            fontColor={\"#fff\"}\r\n                            fontSize={\"1.8rem\"}\r\n                            fontWeight={400}\r\n                            size={40}\r\n                            cut={0}\r\n                            rotation={-90}\r\n                            opacity={10}\r\n                            fill={\"#032541\"}\r\n                            unit={\"%\"}\r\n                            textPosition={\"0.35em\"}\r\n                          />\r\n                        </span>\r\n                        <div className=\"item-title\">\r\n                          {moviesobject.name || moviesobject.title}\r\n                        </div>\r\n                        <div className=\"item-score\">\r\n                          {moviesobject.release_date ||\r\n                            moviesobject.first_air_date}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                ))\r\n              : <div style={{ display: \"flex\"}}>\r\n              <LoadingSkeleton/>\r\n              </div>}\r\n          </div>\r\n        </div>\r\n      }\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport useStore from \"../Store/store\";\r\nimport FreeToWatch from \"./Free to Watch\";\r\nimport Trending from \"./Trending\";\r\nimport WhatsPopulars from \"./WhatsPopulars\";\r\n\r\nexport default function HomeContent() {\r\n  // const currenttext = useStore((state) => state.currenttext);\r\n  // const setCurrenttext = useStore((state) => state.setCurrenttext);\r\n  const populars = useStore((state) => state.populars)\r\n\r\n  const backgroundImage = populars.map(img => img.backdrop_path)[Math.floor(Math.random()*populars.length)]\r\n  console.log(backgroundImage);\r\n  const handleSubmit = (e) => e.preventDefault();\r\n  return (\r\n    <div>\r\n      <section className=\"inner_content banner\"\r\n      style={{backgroundImage: `linear-gradient(to right,\r\n      rgba(3, 40, 68, 0.955),\r\n      rgba(16, 67, 163, 0.438)),\r\n    url(\"https://image.tmdb.org/t/p/original${backgroundImage}\")`}}>\r\n        <div className=\"column_wrapper\">\r\n          <div className=\"content_wrapper wrap\">\r\n            <div className=\"title\">\r\n              <h2 style={{ fontSize: \"48px\", fontWeight: \"600\" }}>Welcome.</h2>\r\n              <h3 style={{ fontSize: \"32px\", fontWeight: \"600\" }}>\r\n                Millions of movies, TV shows and people to discover. Explore\r\n                now.\r\n              </h3>\r\n            </div>\r\n\r\n            <div>\r\n              <form\r\n                className=\"search\"\r\n                style={{ display: \"flex\", marginTop: \"30px\" }}\r\n                onSubmit={handleSubmit}\r\n              >\r\n                <input\r\n                  className=\"form-control search-box\"\r\n                  type=\"search\"\r\n                  placeholder=\"Search\"\r\n                  aria-label=\"Search\"\r\n                  // value={currenttext}\r\n                  // onChange={(e) => setCurrenttext(e.target.value)}\r\n                />\r\n                <button className=\"search-button\">Search</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <WhatsPopulars />\r\n      <FreeToWatch />\r\n      <Trending />\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <header>\r\n      <div className=\"container-fluid content\">\r\n        <div className=\"nav-menu\">\r\n          <div className=\"submenu-left\">\r\n          <span>\r\n            <a to=\"/\">\r\n              <img height=\"20px\" \r\n              src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_short-8e7b30f73a4020692ccca9c88bafe5dcb6f8a62a4c6bc55cd9ba82bb2cd95f6c.svg\"\r\n              alt=\"logo\" />\r\n            </a>\r\n          </span>\r\n          <span className=\"nav-link\">\r\n          <a to=\"/\" className=\"link\">\r\n              Movies\r\n            </a>\r\n            <a to=\"/\" className=\"link\">\r\n              TV Shows\r\n            </a>\r\n            <a to=\"/\" className=\"link\">\r\n              More\r\n            </a>\r\n          </span>\r\n           \r\n          </div>\r\n          <div className=\"submenu-right\">\r\n            <a\r\n              to=\"/\"\r\n              className=\"link\"\r\n              style={{\r\n                border: \"0.5px solid white\",\r\n                borderRadius: \"5px\",\r\n                padding: \"3px\",\r\n              }}\r\n            >\r\n              EN\r\n            </a>\r\n            <a to=\"/\" className=\"link\">\r\n              Login\r\n            </a>\r\n            <a to=\"/\" className=\"link\">\r\n              Join TMDB\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport Footer from \"./components/Footer\";\r\nimport HomeContent from \"./components/HomeContent\";\r\nimport Navbar from \"./components/Navbar\";\r\n// import MainRoutes from \"./Router/Routes\";\r\n// import FreeToWatch from \"./components/Free to Watch\";\r\n// import Trending from \"./components/Trending\";\r\n// import WhatsPopulars from \"./components/WhatsPopulars\";\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      {/* <MainRoutes/> */}\r\n      <HomeContent/>\r\n      {/* <WhatsPopulars />\r\n      <FreeToWatch />\r\n      <Trending /> */}\r\n      <Footer/>\r\n      </>\r\n  );\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// return data.data.results.map(key => key.name === \"Official Trailer\")[0].key"],"sourceRoot":""}