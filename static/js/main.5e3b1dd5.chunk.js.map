{"version":3,"sources":["Store/store.js","components/Users/Favouritelist.js","components/Footer/Footer.js","API/api.js","Utilty/LoadingSkeleton.js","placeholder.png","components/FreeToWatch/Free to Watch.js","components/Trending/Trending.js","components/MostPopulars/WhatsPopulars.js","components/Banner/HomeContent.js","youtube.svg","Utilty/VideoPlayer.js","Utilty/MediaDetails.js","components/Navbar/Navbar.js","components/Users/SignUp.js","Router/Routes.js","index.js"],"names":["useStore","create","devtools","set","populars","topRated","trending","allMovies","freeContent","topRatedMovies","mediaDetails","pagenumber","currenttext","favouritelist","loading","genres","currentgenre","newmovies","genresid","trailerKey","mediaId","modalIsOpen","setPopulars","values","setFreeContent","settopRated","setTrending","setAllMovies","setMediaDetails","setTopRatedMovies","setPagenumber","state","setLoading","setCurrenttext","value","setFavouritelist","setgenres","setcurrentgenre","setnewmovies","setgenresid","setTrailerKey","setMediaId","openModal","closeModal","Favouritelist","useEffect","localdata","JSON","parse","localStorage","getItem","className","length","sort","map","moviesobject","i","alt","effect","src","poster_path","backdrop_path","percent","vote_average","linearGradient","colorSlice","colorCircle","fontColor","fontSize","fontWeight","size","cut","rotation","opacity","fill","unit","textPosition","name","title","release_date","first_air_date","replace","match","y","m","d","overview","onClick","id","newarray","filter","movieobject","setItem","stringify","deleteMovie","style","display","Footer","width","API_KEY","axios","defaults","baseURL","customHeaders","defaultErrorHandler","getPopularMovies","a","get","params","api_key","page","Math","ceil","random","data","getPopularTvShows","getOnRent","language","sort_by","include_video","include_adult","with_watch_monetization_types","getInTheaters","getFreeMovies","getFreeTvShow","getTrendingDay","getTrendingWeek","getMediaDetails","movieid","getTrailer","results","key","type","LoadingSkeleton","baseColor","highlightColor","Array","e","margin","duration","direction","height","circle","count","FreeToWatch","useState","active","setActive","navigate","useNavigate","then","movies","mov","tv","image","Trending","items","WhatsPopulars","HomeContent","console","backgroundImage","img","floor","marginTop","onSubmit","preventDefault","alert","placeholder","customStyles","content","top","left","right","bottom","marginRight","transform","VideoPlayer","isOpen","onRequestClose","contentLabel","ariaHideApp","frameBorder","allowFullScreen","MediaDetails","checkfavouritelist","log","Background","tempArray","mymovies","logo","substring","gen","marginLeft","runtime","fav","oldData","includes","push","addtofavlist","tagline","production_companies","Navbar","to","cursor","border","borderRadius","padding","SignUp","MainRoutes","React","window","scrollTo","path","element","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.5e3b1dd5.chunk.js","sourcesContent":["import create from 'zustand'\r\nimport{devtools} from 'zustand/middleware'\r\n\r\nlet store = (set => ({\r\n    populars:[],\r\n    topRated:[],\r\n    trending:[],\r\n    allMovies: [],\r\n    freeContent:[],\r\n    topRatedMovies: [],\r\n    mediaDetails:[],\r\n    pagenumber:1,\r\n    currenttext:'',\r\n    favouritelist:[],\r\n    loading:false,\r\n    genres:[],\r\n    currentgenre:'All Genres',\r\n    newmovies:[],\r\n    genresid:[],\r\n    trailerKey:'',\r\n    mediaId:'',\r\n    modalIsOpen:false,\r\n    setPopulars: (values) => set(() => ({ populars: values })),\r\n    setFreeContent: (values) => set(() => ({ freeContent: values })),\r\n    settopRated: (values) => set(() => ({ topRated: values })),\r\n    setTrending: (values) => set(() => ({ trending: values })),\r\n    setAllMovies: (values) => set(() => ({ allMovies: values })),\r\n    setMediaDetails: (values) => set(() => ({ mediaDetails: values })),\r\n    setTopRatedMovies: (values) => set(() => ({ topRatedMovies: values })),\r\n    setPagenumber: () => set(state => ({ pagenumber: state.pagenumber + 1 })),\r\n    setLoading: () => set(() => ({ loading: true })),\r\n    setCurrenttext: (value) => set(() => ({ currenttext: value })),\r\n    setFavouritelist: (values) => set(() => ({ favouritelist: [...values] })),\r\n    setgenres:(value) => set(() => ({ genres: [...value] })),\r\n    setcurrentgenre:(value) => set(() => ({ currentgenre: value })),\r\n    setnewmovies:(value) => set(() => ({ newmovies: [...value] })),\r\n    setgenresid: (value) => set(() => ({ genresid: [...value] })),\r\n    setTrailerKey:(value) => set(() => ({ trailerKey: value })),\r\n    setMediaId: (value) => set(() => ({ mediaId: value })),\r\n    openModal: () => set(() => ({ modalIsOpen: true})),\r\n    closeModal: () => set(() => ({ modalIsOpen: false}))\r\n}))\r\n\r\nlet useStore;\r\nuseStore = create(devtools(store));\r\nexport default useStore;\r\n\r\n","import { useEffect } from \"react\";\r\nimport React from 'react'\r\nimport useStore from \"../../Store/store\";\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport { CircularProgressBar } from \"@tomik23/react-circular-progress-bar\";\r\nimport { AiOutlineUnorderedList, AiFillStar ,AiFillDelete } from \"react-icons/ai\";\r\nimport { MdFavorite, MdBookmark } from \"react-icons/md\";\r\nexport default function Favouritelist() {\r\n    const genres = useStore(state => state.genres)\r\n    const setgenres = useStore(state => state.setgenres)\r\n    const currentgenre = useStore(state => state.currentgenre)\r\n    const setcurrentgenre = useStore(state => state.setcurrentgenre)\r\n    const newmovies = useStore(state => state.newmovies)\r\n    const setnewmovies = useStore(state => state.setnewmovies)\r\n    const currenttext = useStore(state => state.currenttext)\r\n    const setCurrenttext = useStore(state => state.setCurrenttext)\r\n    const loading = useStore(state => state.loading)\r\n    const setLoading = useStore(state => state.setLoading)\r\n    const setgenresid = useStore(state => state.setgenresid)\r\n\r\n    useEffect(() => {\r\n        let temparray = [];\r\n        let localdata = JSON.parse(localStorage.getItem('addedmov') || '[]');\r\n        setnewmovies(localdata)\r\n    }, [])\r\n\r\n \r\n    // let filtermovies = [];\r\n    // if (loading) {\r\n    //     filtermovies = newmovies.filter(item => item.original_title.toLowerCase().includes(currenttext.toLowerCase()));\r\n    //     if (currentgenre !== \"All Genres\") {\r\n    //         filtermovies = newmovies.filter((movieobject) => movieobject.genre_ids[0] === currentgenre)\r\n    //     }\r\n    // }\r\n\r\n    // const activegenre = (genre) => {\r\n    //     setcurrentgenre(genre)\r\n    // }\r\n\r\n    // const sortRatDesc = () => {\r\n    //     let temp = newmovies;\r\n    //     temp.sort((a, b) => b.vote_average - a.vote_average)\r\n    //     setnewmovies(temp)\r\n    // }\r\n    // const sortRatAsc = () => {\r\n    //     let temp = newmovies;\r\n    //     temp.sort((a, b) => a.vote_average - b.vote_average)\r\n    //     setnewmovies(temp)\r\n    // }\r\n    const deleteMovie = (id) => {\r\n        let newarray = [];\r\n        newarray = newmovies.filter((movieobject) => movieobject.id !== id)\r\n        setnewmovies(newarray)\r\n        localStorage.setItem('addedmov', JSON.stringify(newarray))\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid main-content \">\r\n            {/* <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <form>\r\n                        <input className=\"form-control search-box\" type=\"search\" placeholder=\"Search in list\" aria-label=\"Search\" value={currenttext} onChange={(e) => setCurrenttext(e.target.value)} />\r\n                    </form>\r\n                </div>\r\n            </div> */}\r\n            <div className=\"column_header\">\r\n                <div className=\"HeadingContainer\">\r\n                    <span className=\"section-title\">My Favorites</span>\r\n                </div>\r\n                <div className=\"selector_wrapper  \">\r\n                    <div\r\n                        className={`anchor ${true ? \"selected\" : \"\"}`}\r\n                    >\r\n                        Movie\r\n                    </div>\r\n                    <div\r\n                        className={`anchor ${\"active\" === \"tv\" ? \"selected\" : \"\"}`}\r\n                    >\r\n                        TV\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"scroller_wrap\">\r\n                {newmovies.length\r\n                    ? newmovies.sort().map((moviesobject, i) => (\r\n                        <div className=\" fav-list-card \" key={i} >\r\n                            <div className=\"details-card\">\r\n                                <div className=\"mediaImage\">\r\n                                    <LazyLoadImage\r\n                                        className=\"fav-item-image\"\r\n                                        alt={\"poster\"}\r\n                                        effect=\"blur\"\r\n                                        src={moviesobject.poster_path ? `https://image.tmdb.org/t/p/original${moviesobject.backdrop_path}` : \"image\"}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"content-details\">\r\n                                    <div className=\"userRating\">\r\n                                        <CircularProgressBar\r\n                                            percent={moviesobject.vote_average * 10}\r\n                                            linearGradient={[\"#18cdb5\", \"#1fb76d\"]}\r\n                                            colorSlice={\"#081c22\"}\r\n                                            colorCircle={\"#081c22\"}\r\n                                            fontColor={\"#fff\"}\r\n                                            fontSize={\"1.8rem\"}\r\n                                            fontWeight={400}\r\n                                            size={40}\r\n                                            cut={0}\r\n                                            rotation={-90}\r\n                                            opacity={10}\r\n                                            fill={\"#032541\"}\r\n                                            unit={\"%\"}\r\n                                            textPosition={\"0.35em\"}\r\n                                        />\r\n                                        <div className=\"media-title\">\r\n                                            {moviesobject.name || moviesobject.title}\r\n                                        </div>\r\n                                        <div className=\"media-release-date\">\r\n                                            {(moviesobject.release_date || moviesobject.first_air_date).replace(/(\\d{4})-(\\d{1,2})-(\\d{1,2})/, function(match,y,m,d) { \r\n                return d + '-' + m + '-' + y;  \r\n            })}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"overview-section\">{moviesobject.overview}</div>\r\n                                    <div>\r\n                                        <div className=\"user-action-section\">\r\n                                            <span className=\"user-actions-items\">\r\n                                                <MdFavorite />\r\n                                            </span>\r\n                                            <span className=\"action-name\" >Favorite</span>\r\n                                            <span className=\"user-actions-items\"> <AiOutlineUnorderedList />\r\n                                            </span>\r\n                                            <span className=\"action-name\" >Add to List</span>\r\n                                            <span className=\"user-actions-items\"><AiFillStar />\r\n                                            </span>\r\n                                            <span className=\"action-name\" >Add to List</span>\r\n                                            <span className=\"user-actions-items\" onClick={()=>deleteMovie(moviesobject.id)}><AiFillDelete/>\r\n                                            </span>\r\n                                            <span className=\"action-name\" >Remove</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                    : <div style={{ display: \"flex\" }}>\r\n                        Loading...\r\n                    </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// filtermovies.length > 0 ?\r\n//     filtermovies.map((movieobject, i) => (\r\n//         <img className=\"img-thumb\"\r\n//         src={`https://image.tmdb.org/t/p/original${movieobject.backdrop_path}`}\r\n//          alt='thumb' />{ movieobject.original_title }))","import React from \"react\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer className=\"container-fluid\">\r\n      <div className=\"footer\">\r\n        <div className=\"footer-items \">\r\n          <img\r\n            width=\"100px\"\r\n            src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg\"\r\n            alt=\"logo\"\r\n          />\r\n          <p className=\"footer-btn\">join the community</p>\r\n        </div>\r\n        <div className=\"footer-items\">\r\n          <h3>COMMUNITY</h3>\r\n          <p> Guidelines</p>\r\n          <p> Discussions</p>\r\n          <p> Leaderboard </p>\r\n          <p> Twitter </p>\r\n        </div>\r\n        <div className=\"footer-items\">\r\n          <h3>LEGAL</h3>\r\n          <p> Terms of Use</p>\r\n          <p> API Terms of Use</p>\r\n          <p> Support Forums </p>\r\n        </div>\r\n        <div className=\"footer-items\">\r\n          <h3>THE BASICS</h3>\r\n          <p> About TMDB </p>\r\n          <p> Contact Us </p>\r\n          <p> Support Forums </p>\r\n          <p> API </p>\r\n          <p> System Status </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"copyright\">\r\n        <span >2022 ©️ TMBD-CLONE. All rights reserved.</span>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst BASE_URL = `https://api.themoviedb.org/3/`;\r\nconst API_KEY = \"bdd243ea847239dc0799805e63e189f0\";\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.defaults.customHeaders = true;\r\naxios.defaults.defaultErrorHandler = true;\r\n\r\nexport const getPopularMovies = async (pagenumber) => {\r\n  const data = await axios.get(\"/movie/popular\", {\r\n    params: {\r\n      api_key: API_KEY,\r\n      page: `${Math.ceil(Math.random() * 5)}`,\r\n\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getPopularTvShows = async (pagenumber) => {\r\n  const data = await axios.get(\"/tv/popular\", {\r\n    params: {\r\n      api_key: API_KEY,\r\n      page: pagenumber,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getOnRent = async (pagenumber) => {\r\n  const data = await axios.get(\"/discover/movie\", {\r\n    params: {\r\n      api_key: API_KEY,\r\n      language: \"en-US\",\r\n      sort_by: \"vote_count.desc\",\r\n      page: pagenumber,\r\n      include_video: \"false\",\r\n      include_adult: \"false\",\r\n      with_watch_monetization_types: \"rent\",\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getInTheaters = async () => {\r\n  const data = await axios.get(\"/movie/now_playing\", {\r\n    params: {\r\n      api_key: API_KEY,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getFreeMovies = async (pagenumber) => {\r\n  const data = await axios.get(\"/discover/movie\", {\r\n    params: {\r\n      api_key: API_KEY,\r\n      language: \"en-US\",\r\n      page: `${Math.ceil(Math.random() * 5)}`,\r\n      include_video: \"false\",\r\n      include_adult: \"false\",\r\n      with_watch_monetization_types: \"free\",\r\n    },\r\n  });\r\n  return data;\r\n};\r\nexport const getFreeTvShow = async (pagenumber) => {\r\n  const data = await axios.get(\"/discover/tv\", {\r\n    params: {\r\n      api_key: API_KEY,\r\n      language: \"en-US\",\r\n      page: `${Math.ceil(Math.random() * 4)}`,\r\n      include_video: \"false\",\r\n      include_adult: \"false\",\r\n      with_watch_monetization_types: \"free\",\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\n\r\nexport const getTrendingDay = async () => {\r\n  const data = await axios.get(\"trending/all/day\", {\r\n    params: {\r\n      api_key: API_KEY,\r\n      language: \"en-US\",\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getTrendingWeek = async () => {\r\n  const data = await axios.get(\"trending/all/week\", {\r\n    params: {\r\n      api_key: API_KEY,\r\n      language: \"en-US\",\r\n      // with_original_language: \"hi\",\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getMediaDetails = async (movieid) => {\r\n  const data = await axios.get(`/movie/${movieid}`, {\r\n    params: {\r\n      api_key: API_KEY,\r\n      language: \"en-US\",\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getTrailer = async (movieid) => {\r\n  const data = await axios.get(`/movie/${movieid}/videos`, {\r\n    params: {\r\n      api_key: API_KEY,\r\n      language: \"en-US\",\r\n    },\r\n  });\r\n  return data.data.results.filter((key) => key.type === \"Trailer\")[0].key;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\n\r\nexport default function LoadingSkeleton() {\r\n  return (\r\n    <SkeletonTheme baseColor=\"#B8B8B8\" highlightColor=\"#C8C8C8\">\r\n      {[...Array(20)].map((e, i) => (\r\n        <div key={i} className=\"scroller_wrap\" style={{margin: \"5px 10px\"}}>\r\n          <span >\r\n            <Skeleton duration={2} direction=\"ltr\" height={225} width={150} />\r\n          </span>\r\n          <span >\r\n          <Skeleton width={30} height={30} duration={2} direction=\"ltr\" circle={true} count={1}/>\r\n            <Skeleton duration={2} direction=\"ltr\" count={2}/>\r\n            \r\n          </span>\r\n        </div>\r\n      ))}\r\n    </SkeletonTheme>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/placeholder.3f04e35d.png\";","import React, { useEffect, useState } from \"react\";\r\nimport useStore from \"../../Store/store\";\r\nimport { getFreeTvShow, getFreeMovies } from \"../../API/api\";\r\nimport \"react-loading-skeleton/dist/skeleton.css\";\r\nimport { CircularProgressBar } from \"@tomik23/react-circular-progress-bar\";\r\nimport {} from \"react/cjs/react.production.min\";\r\nimport LoadingSkeleton from \"../../Utilty/LoadingSkeleton\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport image from '../../placeholder.png';\r\n\r\n\r\nexport default function FreeToWatch() {\r\n  const setLoading = useStore((state) => state.setLoading);\r\n  const pagenumber = useStore((state) => state.pagenumber);\r\n  const freeContent = useStore((state) => state.freeContent);\r\n  const setFreeContent = useStore((state) => state.setFreeContent);\r\n  const [active, setActive] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const setMediaId = useStore((state) => state.setMediaId);\r\n\r\n  useEffect(() => {\r\n    getFreeMovies(pagenumber).then((movies) =>\r\n    setFreeContent(movies.data.results)\r\n    );\r\n    setLoading();\r\n    setActive(\"movies\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pagenumber]);\r\n\r\n  const getMoviesData = () => {\r\n    getFreeMovies(pagenumber).then((mov) => setFreeContent(mov.data.results));\r\n    setActive(\"movies\");\r\n  };\r\n  const getTvData = () => {\r\n    getFreeTvShow(pagenumber).then((tv) => setFreeContent(tv.data.results));\r\n    setActive(\"tv\");\r\n  };\r\n  const showMediaDetails = (id) => {\r\n    setMediaId(id)\r\n    localStorage.setItem('movieid',id);\r\n    navigate(`/details/${id}`)\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\r\n        <div className=\"container-fluid main-content\">\r\n          <div className=\"column_header\">\r\n            <div className=\"HeadingContainer\">\r\n              <span className=\"section-title\">Free To Watch</span>\r\n            </div>\r\n            <div className=\"selector_wrapper \">\r\n              <div\r\n                className={`anchor ${active === \"movies\" ? \"selected\" : null}`}\r\n                onClick={() => getMoviesData()}\r\n              >\r\n                Movies\r\n              </div>\r\n\r\n              <div\r\n                className={`anchor ${active === \"tv\" ? \"selected\" : null}`}\r\n                onClick={() => getTvData()}\r\n              >\r\n                TV Shows\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-horizontal scroller_wrap should_fade\">\r\n            {freeContent.length\r\n              ? freeContent.sort().map((moviesobject, i) => (\r\n                  <div key={i}>\r\n                    <div className=\"vertical-card card text-white m-2\" >\r\n                      <div onClick={()=>showMediaDetails(moviesobject.id)}>\r\n                      <LazyLoadImage\r\n                        className=\"movie-card img-fluid\"\r\n                        width={150}\r\n                        height={225}\r\n                        alt={\"poster\"}\r\n                        effect=\"blur\"\r\n                        src={moviesobject.poster_path ?  `https://image.tmdb.org/t/p/original${moviesobject.poster_path}`: image}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <span className=\"circular-progress-bar\">\r\n                          <CircularProgressBar\r\n                            percent={moviesobject.vote_average * 10}\r\n                            linearGradient={[\"#18cdb5\", \"#1fb76d\"]}\r\n                            colorSlice={\"#081c22\"}\r\n                            colorCircle={\"#081c22\"}\r\n                            fontColor={\"#fff\"}\r\n                            fontSize={\"1.8rem\"}\r\n                            fontWeight={400}\r\n                            size={40}\r\n                            cut={0}\r\n                            rotation={-90}\r\n                            opacity={10}\r\n                            fill={\"#032541\"}\r\n                            unit={\"%\"}\r\n                            textPosition={\"0.35em\"}\r\n                          />\r\n                        </span>\r\n                        <div className=\"item-title\">\r\n                          {moviesobject.name || moviesobject.title}\r\n                        </div>\r\n                        <div className=\"item-score\">\r\n                          {moviesobject.release_date ||\r\n                            moviesobject.first_air_date}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              :<div style={{ display: \"flex\"}}>\r\n              <LoadingSkeleton/>\r\n              </div>}\r\n          </div>\r\n        </div>\r\n      }\r\n    </>\r\n  );\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport useStore from \"../../Store/store\";\r\nimport {  getTrendingDay, getTrendingWeek } from \"../../API/api\";\r\nimport \"react-loading-skeleton/dist/skeleton.css\";\r\nimport { CircularProgressBar } from \"@tomik23/react-circular-progress-bar\";\r\nimport {} from \"react/cjs/react.production.min\";\r\nimport LoadingSkeleton from \"../../Utilty/LoadingSkeleton\";\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport image from '../../placeholder.png';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Trending() {\r\n  const setLoading = useStore((state) => state.setLoading);\r\n  const pagenumber = useStore((state) => state.pagenumber);\r\n  const trending = useStore((state) => state.trending);\r\n  const setTrending = useStore((state) => state.setTrending);\r\n  const setMediaId = useStore((state) => state.setMediaId);\r\n  const [active, setActive] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    getTrendingDay(pagenumber).then((movies) =>\r\n      setTrending(movies.data.results)\r\n    );\r\n    setLoading();\r\n    setActive(\"today\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pagenumber]);\r\n\r\n  const getTrendingDayData = () => {\r\n    getTrendingDay(pagenumber).then((items) => setTrending(items.data.results));\r\n    setActive(\"today\");\r\n  };\r\n  const getTrendingWeekData = () => {\r\n    getTrendingWeek(pagenumber).then((items) =>\r\n      setTrending(items.data.results)\r\n    );\r\n    setActive(\"week\");\r\n  };\r\n  const showMediaDetails = (id) => {\r\n    setMediaId(id)\r\n    localStorage.setItem('movieid', id);\r\n    navigate(`/details/${id}`)\r\n  };\r\n  return (\r\n    <>\r\n      {\r\n        <div className=\"container-fluid main-content\">\r\n          <div className=\"column_header\">\r\n            <div className=\"HeadingContainer\">\r\n              <span className=\"section-title\">Trending</span>\r\n            </div>\r\n            <div className=\"selector_wrapper \">\r\n              <div\r\n                className={`anchor ${active === \"today\" ? \"selected\" : null}`}\r\n                onClick={() => getTrendingDayData()}\r\n              >\r\n                Today\r\n              </div>\r\n              <div\r\n                className={`anchor ${active === \"week\" ? \"selected\" : null}`}\r\n                onClick={() => getTrendingWeekData()}\r\n              >\r\n                This Week\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-horizontal scroller_wrap should_fade\">\r\n            {trending.length ? (\r\n              trending.sort().map((moviesobject, i) => (\r\n                <div  key={i}>\r\n                  <div className=\"vertical-card card text-white m-2\">\r\n                  <div onClick={()=>showMediaDetails(moviesobject.id)}>\r\n                    <LazyLoadImage\r\n                        className=\"movie-card img-fluid\"\r\n                        width={150}\r\n                        height={225}\r\n                        alt={\"poster\"}\r\n                        effect=\"blur\"\r\n                        src={moviesobject.poster_path ?  `https://image.tmdb.org/t/p/original${moviesobject.poster_path}`: image}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"circular-progress-bar\">\r\n                        <CircularProgressBar\r\n                          percent={moviesobject.vote_average * 10}\r\n                          linearGradient={[\"#18cdb5\", \"#1fb76d\"]}\r\n                          colorSlice={\"#081c22\"}\r\n                          colorCircle={\"#081c22\"}\r\n                          fontColor={\"#fff\"}\r\n                          fontSize={\"1.8rem\"}\r\n                          fontWeight={400}\r\n                          size={40}\r\n                          cut={0}\r\n                          rotation={-90}\r\n                          opacity={10}\r\n                          fill={\"#032541\"}\r\n                          unit={\"%\"}\r\n                          textPosition={\"0.35em\"}\r\n                        />\r\n                      </span>\r\n                      <div className=\"item-title\">\r\n                        {moviesobject.title || moviesobject.name}\r\n                      </div>\r\n                      <div className=\"item-score\">\r\n                        {moviesobject.release_date ||\r\n                          moviesobject.first_air_date}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div style={{ display: \"flex\" }}>\r\n                <LoadingSkeleton />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      }\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport useStore from \"../../Store/store\";\r\nimport { getPopularMovies, getOnRent, getPopularTvShows, getInTheaters, } from \"../../API/api\";\r\nimport \"react-loading-skeleton/dist/skeleton.css\";\r\nimport { CircularProgressBar } from \"@tomik23/react-circular-progress-bar\";\r\nimport { } from \"react/cjs/react.production.min\";\r\nimport LoadingSkeleton from \"../../Utilty/LoadingSkeleton\";\r\nimport image from '../../placeholder.png';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\nexport default function WhatsPopulars() {\r\n  const setLoading = useStore((state) => state.setLoading);\r\n  const pagenumber = useStore((state) => state.pagenumber);\r\n  const populars = useStore((state) => state.populars);\r\n  const setPopulars = useStore((state) => state.setPopulars);\r\n  const setMediaId = useStore((state) => state.setMediaId);\r\n\r\n  const [active, setActive] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    getPopularMovies(pagenumber).then((movies) =>\r\n      setPopulars(movies.data.results)\r\n    );\r\n    setLoading();\r\n    setActive(\"Streaming\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pagenumber]);\r\n\r\n  const getMoviesData = () => {\r\n    getPopularMovies(pagenumber).then((mov) => setPopulars(mov.data.results));\r\n    setActive(\"Streaming\");\r\n  };\r\n  const getTvData = () => {\r\n    getPopularTvShows(pagenumber).then((tv) => setPopulars(tv.data.results));\r\n    setActive(\"tv\");\r\n  };\r\n  const getRentData = () => {\r\n    getOnRent(pagenumber).then((items) => setPopulars(items.data.results));\r\n    setActive(\"rent\");\r\n  };\r\n  const getInTheatersData = () => {\r\n    getInTheaters(pagenumber).then((mov) => setPopulars(mov.data.results));\r\n    setActive(\"theater\");\r\n  };\r\n  const showMediaDetails = (id) => {\r\n    setMediaId(id)\r\n    localStorage.setItem('movieid', id);\r\n    navigate(`/details/${id}`)\r\n  };\r\n  return (\r\n    <>\r\n      {\r\n        <div className=\"container-fluid main-content \">\r\n          <div className=\"column_header\">\r\n            <div className=\"HeadingContainer\">\r\n              <span className=\"section-title\">What's Popular</span>\r\n            </div>\r\n            <div className=\"selector_wrapper  \">\r\n              <div\r\n                className={`anchor ${active === \"Streaming\" ? \"selected\" : \"\"\r\n                  }`}\r\n                onClick={() => getMoviesData()}\r\n              >\r\n                Streaming\r\n              </div>\r\n\r\n              <div\r\n                className={`anchor ${active === \"tv\" ? \"selected\" : \"\"}`}\r\n                onClick={() => getTvData()}\r\n              >\r\n                On TV\r\n              </div>\r\n\r\n              <div\r\n                className={`anchor ${active === \"rent\" ? \"selected\" : \"\"}`}\r\n                onClick={() => getRentData()}\r\n              >\r\n                For Rent\r\n              </div>\r\n              <div\r\n                className={`anchor ${active === \"theater\" ? \"selected\" : \"\"}`}\r\n                onClick={() => getInTheatersData()}\r\n              >\r\n                In Theaters\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-horizontal scroller_wrap \">\r\n            {populars.length\r\n              ? populars.sort().map((moviesobject, i) => (\r\n                <div key={i} >\r\n                  <div className=\"vertical-card card text-white m-2\"\r\n\r\n                  >\r\n                    <div onClick={() => showMediaDetails(moviesobject.id)}>\r\n                      <LazyLoadImage\r\n                        className=\"movie-card img-fluid\"\r\n                        width={150}\r\n                        height={225}\r\n                        alt={\"poster\"}\r\n                        effect=\"blur\"\r\n                        src={moviesobject.poster_path ?  `https://image.tmdb.org/t/p/original${moviesobject.poster_path}`: image}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"circular-progress-bar\">\r\n                        <CircularProgressBar\r\n                          percent={moviesobject.vote_average * 10}\r\n                          linearGradient={[\"#18cdb5\", \"#1fb76d\"]}\r\n                          colorSlice={\"#081c22\"}\r\n                          colorCircle={\"#081c22\"}\r\n                          fontColor={\"#fff\"}\r\n                          fontSize={\"1.8rem\"}\r\n                          fontWeight={400}\r\n                          size={40}\r\n                          cut={0}\r\n                          rotation={-90}\r\n                          opacity={10}\r\n                          fill={\"#032541\"}\r\n                          unit={\"%\"}\r\n                          textPosition={\"0.35em\"}\r\n                        />\r\n                      </span>\r\n                      <div className=\"item-title\">\r\n                        {moviesobject.name || moviesobject.title}\r\n                      </div>\r\n                      <div className=\"item-score\">\r\n                        {moviesobject.release_date ||\r\n                          moviesobject.first_air_date}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n              : <div style={{ display: \"flex\" }}>\r\n                <LoadingSkeleton />\r\n              </div>}\r\n          </div>\r\n        </div>\r\n      }\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport useStore from \"../../Store/store\";\r\nimport FreeToWatch from \"../FreeToWatch/Free to Watch\";\r\nimport Trending from \"../Trending/Trending\";\r\nimport WhatsPopulars from \"../MostPopulars/WhatsPopulars\";\r\n\r\nexport default function HomeContent() {\r\n  console.count(\"banner\")\r\n  // const currenttext = useStore((state) => state.currenttext);\r\n  // const setCurrenttext = useStore((state) => state.setCurrenttext);\r\n  const populars = useStore((state) => state.populars);\r\n\r\n  const backgroundImage = populars.map((img) => img.backdrop_path)[\r\n    Math.floor(Math.random() * populars.length)\r\n  ];\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    alert(\"This feature is comimg soon\");\r\n  }\r\n  return (\r\n    <div className=\"page-layout container-fluid \">\r\n      <div\r\n        className=\"inner_content banner\"\r\n        style={{\r\n          backgroundImage: `linear-gradient(to right,\r\n            rgba(3, 84, 114, 0.8),rgba(4, 88, 116, 0.7)),\r\n    url(\"https://image.tmdb.org/t/p/original${backgroundImage}\")`,\r\n        }}\r\n      >\r\n        <div className=\"column_wrapper\">\r\n          <div className=\"content_wrapper wrap\">\r\n            <div className=\"title\">\r\n              <h2>Welcome !</h2>\r\n              <h3>\r\n                Millions of movies, TV shows and people to discover. Explore\r\n                now.\r\n              </h3>\r\n            </div>\r\n\r\n            <div>\r\n              <form\r\n                className=\"search\"\r\n                style={{ display: \"flex\", marginTop: \"30px\" }}\r\n                onSubmit={handleSubmit}\r\n              >\r\n                <input\r\n                  className=\"form-control search-box\"\r\n                  type=\"search\"\r\n                  placeholder=\"Search\"\r\n                  aria-label=\"Search\"\r\n                  // value={currenttext}\r\n                  // onChange={(e) => setCurrenttext(e.target.value)}\r\n                />\r\n                <button className=\"search-button\">Search</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <WhatsPopulars />\r\n      <FreeToWatch />\r\n      <Trending />\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/youtube.d5147516.svg\";","import React from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport useStore from \"../Store/store\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\n\r\nexport default function VideoPlayer() {\r\n\r\n  const trailerKey = useStore((state) => state.trailerKey);\r\n  const modalIsOpen = useStore((state) => state.modalIsOpen);\r\n  const closeModal = useStore((state) => state.closeModal);\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        contentLabel=\"Youtube Player\"\r\n        ariaHideApp={false}\r\n      >\r\n        <div className=\"container-fluid\">\r\n        <p className=\"close-btn\" onClick={closeModal}>x</p>\r\n        <div className=\"watchScreen__player\">\r\n          <iframe\r\n            title={\"Video\"}\r\n            src={`https://www.youtube.com/embed/${trailerKey}`}\r\n            frameBorder={0}\r\n            allowFullScreen\r\n            width={\"100%\"}\r\n            height={\"100%\"}\r\n          ></iframe>\r\n        \r\n        </div>\r\n      </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable no-dupe-keys */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable jsx-a11y/anchor-has-content */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { getMediaDetails, getTrailer } from \"../API/api\";\r\nimport useStore from \"../Store/store\";\r\nimport logo from '../youtube.svg'\r\nimport VideoPlayer from \"./VideoPlayer\";\r\nimport { CircularProgressBar } from \"@tomik23/react-circular-progress-bar\";\r\nimport { AiOutlineUnorderedList, AiFillStar } from \"react-icons/ai\";\r\nimport { MdFavorite,MdBookmark } from \"react-icons/md\";\r\nimport LoadingSkeleton from \"./LoadingSkeleton\";\r\n\r\nexport const MediaDetails = () => {\r\n  const mediaId = localStorage.getItem(\"movieid\");\r\n  const mediaDetails = useStore((state) => state.mediaDetails);\r\n  const setMediaDetails = useStore((state) => state.setMediaDetails);\r\n  const setTrailerKey = useStore((state) => state.setTrailerKey);\r\n  const openModal = useStore((state) => state.openModal);\r\n  const [loading, setLoading] = useState(false)\r\n  const [favouritelist, setFavouritelist] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (mediaId) {\r\n      getMediaDetails(mediaId).then((items) => {\r\n        setMediaDetails(items.data);\r\n        setLoading(true)\r\n      });\r\n    }\r\n  }, [mediaId]);\r\n\r\n  const showTrailer = (id) => {\r\n    getTrailer(id).then((key) => setTrailerKey(key));\r\n    openModal();\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkfavouritelist();\r\n  },[])\r\n  const addtofavlist = (fav) => {\r\n    let oldData = JSON.parse(localStorage.getItem(\"addedmov\") || \"[]\");\r\n    if (favouritelist.includes(fav.id)) {\r\n      oldData = oldData.filter((m) => m.id !== fav.id);\r\n    } else {\r\n        oldData.push(fav);\r\n    }\r\n    localStorage.setItem(\"addedmov\", JSON.stringify(oldData));\r\n    checkfavouritelist();\r\n};\r\nconsole.log(\"favouritelist\", favouritelist);\r\n\r\nlet checkfavouritelist = () => {\r\n  let oldData = JSON.parse(localStorage.getItem(\"addedmov\") || \"[]\");\r\n  let tempArray = oldData.map((mymovies) => mymovies.id);\r\n  setFavouritelist(tempArray);\r\n};\r\n  let Background;\r\n  if (mediaDetails) {\r\n    Background = {\r\n      backgroundImage: `linear-gradient(to right,\r\n        rgba(3, 84, 114, 0.9),rgba(2, 66, 87, 0.9)),url(https://image.tmdb.org/t/p/original${mediaDetails.backdrop_path})`,\r\n    }\r\n  }\r\n  return (\r\n    <div style={Background} className=\"container-fluid backdrop_poster\">\r\n      <span className=\"row \"\r\n        ></span>\r\n      <div className=\"media-content\">\r\n        {loading ?\r\n          <>\r\n            <div className=\"poster-section\">\r\n              <div className=\"poster\">\r\n                <img\r\n                  className=\"img-fluid\"\r\n                  src={`https://image.tmdb.org/t/p/original${mediaDetails.poster_path}`}\r\n                  alt=\"\"\r\n                />\r\n                <div className=\"streaming-platform\" onClick={() => showTrailer(mediaDetails.id)}>\r\n                  <img className=\"youtube-logo\" src={logo} alt=\"logo\" />Watch Trailer</div>\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\"info-section\">\r\n              <div className=\"media-title \">\r\n                <h1 className=\"mediaName\">\r\n                  {mediaDetails?.title}{\" \"}<span className=\"release-date\">\r\n                    ({mediaDetails.release_date.substring(0, 4)})\r\n                  </span>\r\n                </h1>\r\n\r\n              </div>\r\n              <div className=\"media-genre-info\">\r\n                {mediaDetails.genres.map((gen, i) => (<span style={{ marginLeft: \"5px\" }} key={i}>{gen.name}, </span>\r\n                ))}\r\n                <span style={{ margin: \"10px\" }}>{\" \"}{mediaDetails.runtime}Minutes</span>\r\n              </div>\r\n\r\n              <div className=\"user-section\">\r\n                    <div>\r\n                    <CircularProgressBar\r\n                      className=\"circular-progressBar\"\r\n                      percent={mediaDetails.vote_average * 10}\r\n                      linearGradient={[\"#18cdb5\", \"#1fb76d\"]}\r\n                      colorSlice={\"#091c22\"}\r\n                      colorCircle={\"#091c22\"}\r\n                      fontColor={\"#fff\"}\r\n                      fontWeight={400}\r\n                      fontSize={\"1.5rem\"}\r\n                      size={60}\r\n                      cut={0}\r\n                      rotation={-90}\r\n                      opacity={10}\r\n                      fill={\"#032541\"}\r\n                      unit={\"%\"}\r\n                      textPosition={\"0.35em\"}\r\n                    />\r\n                    </div>\r\n                    <span className=\"score\">User Score</span>\r\n                    <div className=\"user-account\">\r\n                      <span className=\"user-action\" onClick={()=>addtofavlist(mediaDetails)}>\r\n                         {favouritelist.includes(mediaDetails.id) ? <MdFavorite className='red-icon'/>: <MdFavorite/>}\r\n                        </span>\r\n                      <span className=\"user-action\"><AiOutlineUnorderedList/></span>\r\n                      <span className=\"user-action\"><MdBookmark/></span>\r\n                      <span className=\"user-action\"><AiFillStar/></span>\r\n                    </div>\r\n\r\n              </div>\r\n              <p className='tagline'> {mediaDetails.tagline}</p>\r\n              <div className=\"overview-section\">\r\n               <h5><b>Overview</b> </h5>\r\n                 <span>{mediaDetails.overview}</span>                \r\n              </div>\r\n              <div className=\"production-section\">\r\n               <h5><b>Production By </b> </h5>\r\n                 <span>{mediaDetails.production_companies.map((e,i)=><span key={i}>{e.name},{\" \"}</span> )}</span>                \r\n              </div>\r\n            </div>\r\n          </> : null}\r\n\r\n      </div>\r\n      <VideoPlayer />\r\n    </div>\r\n  );\r\n};\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar() {\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"container-fluid content\">\r\n        <div className=\"nav-menu\">\r\n          <div className=\"submenu-left\">\r\n          <span>\r\n            <Link to=\"/\">\r\n              <img height=\"20px\" \r\n              style={{cursor:\"pointer\"}}\r\n              src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_short-8e7b30f73a4020692ccca9c88bafe5dcb6f8a62a4c6bc55cd9ba82bb2cd95f6c.svg\"\r\n              alt=\"logo\" />\r\n            </Link>\r\n          </span>\r\n          <span className=\"nav-link\">\r\n          <Link to=\"/\" className=\"link\">\r\n              Movies\r\n            </Link>\r\n            <Link to=\"/\" className=\"link\">\r\n              TV Shows\r\n            </Link>\r\n            <Link to=\"/\" className=\"link\">\r\n              More\r\n            </Link>\r\n          </span>\r\n           \r\n          </div>\r\n          <div className=\"submenu-right\">\r\n            <a\r\n              to=\"/\"\r\n              className=\"link\"\r\n              style={{\r\n                border: \"0.5px solid white\",\r\n                borderRadius: \"5px\",\r\n                padding: \"3px\",\r\n              }}\r\n            >\r\n              EN\r\n            </a>\r\n            <Link to=\"/favouritelist\" className=\"link\">\r\n              Login\r\n            </Link>\r\n            <a to=\"/\" className=\"link\">\r\n              Join TMDB\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function SignUp() {\r\n  return (\r\n    <div>SignUp</div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Favouritelist from \"../components/Users/Favouritelist\";\r\nimport Footer from \"../components/Footer/Footer\";\r\nimport HomeContent from \"../components/Banner/HomeContent\";\r\nimport { MediaDetails } from \"../Utilty/MediaDetails\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport SignUp from \"../components/Users/SignUp\";\r\n\r\nexport default function MainRoutes() {\r\n\r\n  \r\n\r\n  React.useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  \r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Routes>\r\n        <Route path=\"/\" element={<HomeContent />} />\r\n        <Route path=\"/favouritelist\" element={<Favouritelist />} />\r\n        <Route path=\"/signup\" element={<SignUp />} />\r\n        <Route path=\"/details/:id\" element={<MediaDetails />} />\r\n      </Routes>\r\n      <Footer />\r\n    </>\r\n  );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from \"react-router-dom\";\nimport MainRoutes from './Router/Routes';\nimport \"./App.css\";\n\nReactDOM.render(\n  <BrowserRouter  basename='/tmdb-clone'>\n    <MainRoutes/>\n  </BrowserRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}