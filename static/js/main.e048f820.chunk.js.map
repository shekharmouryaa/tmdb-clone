{"version":3,"sources":["Store/store.js","components/Favouritelist.js","components/Footer.js","API/api.js","components/LoadingSkeleton.js","components/Free to Watch.js","components/Trending.js","components/VideoPlayer.js","components/WhatsPopulars.js","components/HomeContent.js","components/MediaDetails.js","components/Navbar.js","components/SignUp.js","Router/Routes.js","index.js"],"names":["useStore","create","devtools","set","populars","topRated","trending","allMovies","freeContent","topRatedMovies","mediaDetails","pagenumber","currenttext","favouritelist","loading","genres","currentgenre","newmovies","genresid","trailerKey","mediaId","modalIsOpen","setPopulars","values","setFreeContent","settopRated","setTrending","setAllMovies","setMediaDetails","setTopRatedMovies","setPagenumber","state","setLoading","setCurrenttext","value","setFavouritelist","setgenres","setcurrentgenre","setnewmovies","setgenresid","setTrailerKey","setMediaId","openModal","closeModal","Favouritelist","useEffect","temparray","localdata","JSON","parse","localStorage","getItem","genredID","map","e","genre_ids","flat","filter","index","self","indexOf","console","log","forEach","movieobject","includes","push","concat","filtermovies","item","original_title","toLowerCase","className","style","genreslist","i","onClick","type","placeholder","onChange","target","scope","temp","sort","a","b","vote_average","length","src","backdrop_path","alt","id","newarray","setItem","stringify","deleteMovie","Footer","width","API_KEY","axios","defaults","baseURL","customHeaders","defaultErrorHandler","getPopularMovies","get","params","api_key","page","Math","ceil","random","data","getPopularTvShows","getOnRent","language","sort_by","include_video","include_adult","with_watch_monetization_types","getInTheaters","getFreeMovies","getFreeTvShow","getTrendingDay","getTrendingWeek","getMediaDetails","movieid","getTrailer","results","key","LoadingSkeleton","baseColor","highlightColor","Array","margin","duration","direction","height","count","FreeToWatch","useState","active","setActive","navigate","useNavigate","then","movies","mov","tv","moviesobject","poster_path","percent","linearGradient","colorSlice","colorCircle","fontColor","fontSize","fontWeight","size","cut","rotation","opacity","fill","unit","textPosition","name","title","release_date","first_air_date","display","Trending","items","customStyles","content","top","left","right","bottom","marginRight","transform","VideoPlayer","isOpen","onRequestClose","contentLabel","frameBorder","allowFullScreen","WhatsPopulars","HomeContent","backgroundImage","img","floor","marginTop","onSubmit","preventDefault","MediaDetails","cursor","gen","overview","Navbar","to","border","borderRadius","padding","SignUp","MainRoutes","path","element","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.e048f820.chunk.js","sourcesContent":["import create from 'zustand'\r\nimport{devtools} from 'zustand/middleware'\r\n\r\nlet store = (set => ({\r\n    populars:[],\r\n    topRated:[],\r\n    trending:[],\r\n    allMovies: [],\r\n    freeContent:[],\r\n    topRatedMovies: [],\r\n    mediaDetails:[],\r\n    pagenumber:1,\r\n    currenttext:'',\r\n    favouritelist:[],\r\n    loading:false,\r\n    genres:[],\r\n    currentgenre:'All Genres',\r\n    newmovies:[],\r\n    genresid:[],\r\n    trailerKey:'',\r\n    mediaId:'',\r\n    modalIsOpen:false,\r\n    setPopulars: (values) => set(() => ({ populars: values })),\r\n    setFreeContent: (values) => set(() => ({ freeContent: values })),\r\n    settopRated: (values) => set(() => ({ topRated: values })),\r\n    setTrending: (values) => set(() => ({ trending: values })),\r\n    setAllMovies: (values) => set(() => ({ allMovies: values })),\r\n    setMediaDetails: (values) => set(() => ({ mediaDetails: values })),\r\n    setTopRatedMovies: (values) => set(() => ({ topRatedMovies: values })),\r\n    setPagenumber: () => set(state => ({ pagenumber: state.pagenumber + 1 })),\r\n    setLoading: () => set(() => ({ loading: true })),\r\n    setCurrenttext: (value) => set(() => ({ currenttext: value })),\r\n    setFavouritelist: (values) => set(() => ({ favouritelist: [...values] })),\r\n    setgenres:(value) => set(() => ({ genres: [...value] })),\r\n    setcurrentgenre:(value) => set(() => ({ currentgenre: value })),\r\n    setnewmovies:(value) => set(() => ({ newmovies: [...value] })),\r\n    setgenresid: (value) => set(() => ({ genresid: [...value] })),\r\n    setTrailerKey:(value) => set(() => ({ trailerKey: value })),\r\n    setMediaId: (value) => set(() => ({ mediaId: value })),\r\n    openModal: () => set(() => ({ modalIsOpen: true})),\r\n    closeModal: () => set(() => ({ modalIsOpen: false}))\r\n}))\r\n\r\nlet useStore;\r\nuseStore = create(devtools(store));\r\nexport default useStore;\r\n\r\n","import { useEffect } from \"react\";\r\nimport React from 'react'\r\nimport useStore from \"../Store/store\";\r\n\r\nexport default function Favouritelist() {\r\nconst genres = useStore(state => state.genres)\r\nconst setgenres = useStore(state => state.setgenres)\r\nconst currentgenre = useStore(state => state.currentgenre)\r\nconst setcurrentgenre = useStore(state => state.setcurrentgenre)\r\nconst newmovies = useStore(state => state.newmovies)\r\nconst setnewmovies = useStore(state => state.setnewmovies)\r\nconst currenttext = useStore(state => state.currenttext)\r\nconst setCurrenttext = useStore(state => state.setCurrenttext)\r\nconst loading = useStore(state => state.loading)\r\nconst setLoading = useStore(state => state.setLoading)\r\nconst setgenresid = useStore(state => state.setgenresid)\r\n\r\n    useEffect ( () => {\r\n        let temparray = [];       \r\n        let localdata = JSON.parse(localStorage.getItem('addedmov') || '[]');\r\n        let genredID = localdata.map((e) => e.genre_ids).flat().filter((value, index, self)=> self.indexOf(value) === index);;\r\n        setgenresid(genredID)\r\n        console.log(\"localdata\",localdata);\r\n        console.log(\"genredID\",genredID);\r\n        localdata.forEach((movieobject) => {\r\n            if (!temparray.includes(movieobject.genre_ids[0])) {\r\n                temparray.push(movieobject.genre_ids[0])\r\n            }\r\n        });\r\n        console.log(\"temparray\",temparray);\r\n        setgenres([\"All Genres\"].concat(temparray))\r\n        console.log(\"genres\",genres);\r\n        setnewmovies(localdata)\r\n        console.log(\"newmovies\",newmovies);\r\n        setLoading(true)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n\r\n    let filtermovies=[];\r\n    if(loading){\r\n        filtermovies = newmovies.filter(item =>  item.original_title.toLowerCase().includes(currenttext.toLowerCase()));\r\n        if (currentgenre !== \"All Genres\") {\r\n                filtermovies = newmovies.filter((movieobject) => movieobject.genre_ids[0] === currentgenre)\r\n            }\r\n            console.log(\"All Genres filtermovies\", filtermovies);\r\n    }\r\n\r\n    const activegenre =(genre) => {\r\n        setcurrentgenre(genre)\r\n    }\r\n\r\n    const sortRatDesc = () => {\r\n        let temp = newmovies;\r\n        temp.sort((a, b) => b.vote_average - a.vote_average)\r\n        setnewmovies(temp)\r\n    }\r\n    const sortRatAsc = () => {\r\n        let temp = newmovies;\r\n        temp.sort((a, b) => a.vote_average - b.vote_average)\r\n        setnewmovies(temp)\r\n    }\r\n    const deleteMovie = (id) => {\r\n        let newarray = [];\r\n        newarray = newmovies.filter((movieobject) => movieobject.id !== id)\r\n        setnewmovies(newarray)\r\n        let genres = newarray.map((e) => e.genre_ids[0]).flat().filter((value, index, self)=> self.indexOf(value) === index);\r\n        setgenres([\"All Genres\"].concat(genres))\r\n        localStorage.setItem('addedmov', JSON.stringify(newarray))       \r\n    }\r\n\r\n  return (\r\n    <div>\r\n                <div className=\"main container-fluid\">\r\n                    <div className=\"row\" style={{\"--bs-gutter-x\":0}}>\r\n                        <div className=\"col-md-3 \">\r\n                            <ul className=\"list-group p-3\">\r\n                                { \r\n                                    genres.map((genreslist,i) => (\r\n                                        currentgenre === genreslist ? <li className=\"list-group-item listitems\" key={i}>{genreslist}</li> :\r\n                                            <li className=\"list-group-item\" key={i} onClick={() => activegenre(genreslist)}>{genreslist}</li>\r\n                                    ))\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"col-md-9\">\r\n                            <div className=\"row\">\r\n                                <div>\r\n                                    <form className=\"d-flex\">\r\n                                        <input className=\"form-control search-box\" type=\"search\" placeholder=\"Search Movies\" aria-label=\"Search\" value={currenttext} onChange={(e) => setCurrenttext(e.target.value)}/>\r\n                                    </form>\r\n                                </div>\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr className='text-center'>\r\n                                            <th scope=\"col\">Title</th>\r\n                                            <th scope=\"col\">Genre</th>\r\n                                            <th scope=\"col\"><i className=\"fas fa-sort-up m-2 desc-btn\" onClick={sortRatDesc} />Rating<i className=\"fas fa-sort-down m-2\" onClick={sortRatAsc} /></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {filtermovies.length>0 ?\r\n                                            filtermovies.map((movieobject,i) => (\r\n                                                <tr key={i}>\r\n                                                    <td> <img className=\"img-thumb\" src={`https://image.tmdb.org/t/p/original${movieobject.backdrop_path}`} alt='thumb' />{movieobject.original_title}</td>\r\n                                                    <td>{movieobject.genre_ids[0]}</td>\r\n                                                    <td>{movieobject.vote_average}</td>\r\n                                                    <td><button type=\"button\" className=\"btn btn-danger\" onClick={() => deleteMovie(movieobject.id)}>Delete</button></td>\r\n                                                </tr>\r\n                                            )): <tr>No Movie Added to list</tr>\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n  )\r\n}","import React from \"react\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer className=\"container-fluid\">\r\n      <div className=\"footer\">\r\n        <div className=\"footer-items \">\r\n          <img\r\n            width=\"100px\"\r\n            src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg\"\r\n            alt=\"logo\"\r\n          />\r\n          <p className=\"footer-btn\">join the community</p>\r\n        </div>\r\n        <div className=\"footer-items\">\r\n          <h3>COMMUNITY</h3>\r\n          <p> Guidelines</p>\r\n          <p> Discussions</p>\r\n          <p> Leaderboard </p>\r\n          <p> Twitter </p>\r\n        </div>\r\n        <div className=\"footer-items\">\r\n          <h3>LEGAL</h3>\r\n          <p> Terms of Use</p>\r\n          <p> API Terms of Use</p>\r\n          <p> Support Forums </p>\r\n        </div>\r\n        <div className=\"footer-items\">\r\n          <h3>THE BASICS</h3>\r\n          <p> About TMDB </p>\r\n          <p> Contact Us </p>\r\n          <p> Support Forums </p>\r\n          <p> API </p>\r\n          <p> System Status </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"copyright\">\r\n        <span >Copyright @ 2022</span>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst BASE_URL = `https://api.themoviedb.org/3/`;\r\nconst API_KEY = \"bdd243ea847239dc0799805e63e189f0\";\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.defaults.customHeaders = true;\r\naxios.defaults.defaultErrorHandler = true;\r\n\r\nexport const getPopularMovies = async (pagenumber) => {\r\n  const data = await axios.get(\"/movie/popular\", {\r\n    params: {\r\n      api_key: API_KEY,\r\n      page: `${Math.ceil(Math.random() * 5)}`,\r\n\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getPopularTvShows = async (pagenumber) => {\r\n  const data = await axios.get(\"/tv/popular\", {\r\n    params: {\r\n      api_key: API_KEY,\r\n      page: pagenumber,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getOnRent = async (pagenumber) => {\r\n  const data = await axios.get(\"/discover/movie\", {\r\n    params: {\r\n      api_key: API_KEY,\r\n      language: \"en-US\",\r\n      sort_by: \"vote_count.desc\",\r\n      page: pagenumber,\r\n      include_video: \"false\",\r\n      include_adult: \"false\",\r\n      with_watch_monetization_types: \"rent\",\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getInTheaters = async () => {\r\n  const data = await axios.get(\"/movie/now_playing\", {\r\n    params: {\r\n      api_key: API_KEY,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getFreeMovies = async (pagenumber) => {\r\n  const data = await axios.get(\"/discover/movie\", {\r\n    params: {\r\n      api_key: API_KEY,\r\n      language: \"en-US\",\r\n      page: `${Math.ceil(Math.random() * 5)}`,\r\n      include_video: \"false\",\r\n      include_adult: \"false\",\r\n      with_watch_monetization_types: \"free\",\r\n    },\r\n  });\r\n  return data;\r\n};\r\nexport const getFreeTvShow = async (pagenumber) => {\r\n  const data = await axios.get(\"/discover/tv\", {\r\n    params: {\r\n      api_key: API_KEY,\r\n      language: \"en-US\",\r\n      page: `${Math.ceil(Math.random() * 4)}`,\r\n      include_video: \"false\",\r\n      include_adult: \"false\",\r\n      with_watch_monetization_types: \"free\",\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\n\r\nexport const getTrendingDay = async () => {\r\n  const data = await axios.get(\"trending/all/day\", {\r\n    params: {\r\n      api_key: API_KEY,\r\n      language: \"en-US\",\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getTrendingWeek = async () => {\r\n  const data = await axios.get(\"trending/all/week\", {\r\n    params: {\r\n      api_key: API_KEY,\r\n      language: \"en-US\",\r\n      // with_original_language: \"hi\",\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getMediaDetails = async (movieid) => {\r\n  const data = await axios.get(`/movie/${movieid}`, {\r\n    params: {\r\n      api_key: API_KEY,\r\n      language: \"en-US\",\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getTrailer = async (movieid) => {\r\n  const data = await axios.get(`/movie/${movieid}/videos`, {\r\n    params: {\r\n      api_key: API_KEY,\r\n      language: \"en-US\",\r\n    },\r\n  });\r\n  return data.data.results.filter((key) => key.type === \"Trailer\")[0].key;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\n\r\nexport default function LoadingSkeleton() {\r\n  return (\r\n    <SkeletonTheme baseColor=\"#B8B8B8\" highlightColor=\"#C8C8C8\">\r\n      {[...Array(20)].map((e, i) => (\r\n        <div key={i} className=\"scroller_wrap\" style={{margin: \"5px 10px\"}}>\r\n          <span >\r\n            <Skeleton duration={2} direction=\"ltr\" height={225} width={150} />\r\n          </span>\r\n          <span >\r\n            <Skeleton duration={2} direction=\"ltr\" count={3}/>\r\n          </span>\r\n        </div>\r\n      ))}\r\n    </SkeletonTheme>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport useStore from \"../Store/store\";\r\nimport { getFreeTvShow, getFreeMovies } from \"../API/api\";\r\nimport \"react-loading-skeleton/dist/skeleton.css\";\r\nimport { CircularProgressBar } from \"@tomik23/react-circular-progress-bar\";\r\nimport {} from \"react/cjs/react.production.min\";\r\nimport LoadingSkeleton from \"./LoadingSkeleton\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function FreeToWatch() {\r\n  const setLoading = useStore((state) => state.setLoading);\r\n  const pagenumber = useStore((state) => state.pagenumber);\r\n  const freeContent = useStore((state) => state.freeContent);\r\n  const setFreeContent = useStore((state) => state.setFreeContent);\r\n  const [active, setActive] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const setMediaId = useStore((state) => state.setMediaId);\r\n\r\n  useEffect(() => {\r\n    getFreeMovies(pagenumber).then((movies) =>\r\n    setFreeContent(movies.data.results)\r\n    );\r\n    setLoading();\r\n    setActive(\"movies\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pagenumber]);\r\n\r\n  const getMoviesData = () => {\r\n    getFreeMovies(pagenumber).then((mov) => setFreeContent(mov.data.results));\r\n    setActive(\"movies\");\r\n  };\r\n  const getTvData = () => {\r\n    getFreeTvShow(pagenumber).then((tv) => setFreeContent(tv.data.results));\r\n    setActive(\"tv\");\r\n  };\r\n  const showMediaDetails = (id) => {\r\n    setMediaId(id)\r\n    localStorage.setItem('movieid',id);\r\n    navigate(\"/details\")\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\r\n        <div className=\"container-fluid main-content\">\r\n          <div className=\"column_header\">\r\n            <div className=\"HeadingContainer\">\r\n              <span className=\"section-title\">Free To Watch</span>\r\n            </div>\r\n            <div className=\"selector_wrapper \">\r\n              <div\r\n                className={`anchor ${active === \"movies\" ? \"selected\" : null}`}\r\n                onClick={() => getMoviesData()}\r\n              >\r\n                Movies\r\n              </div>\r\n\r\n              <div\r\n                className={`anchor ${active === \"tv\" ? \"selected\" : null}`}\r\n                onClick={() => getTvData()}\r\n              >\r\n                TV Shows\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-horizontal scroller_wrap should_fade\">\r\n            {freeContent.length\r\n              ? freeContent.sort().map((moviesobject, i) => (\r\n                  <div key={i}>\r\n                    <div className=\"vertical-card card text-white m-2\" >\r\n                      <div onClick={()=>showMediaDetails(moviesobject.id)}>\r\n                        <img\r\n                          className=\"movie-card img-fluid\"\r\n                          src={`https://image.tmdb.org/t/p/original${moviesobject.poster_path}`}\r\n                          alt=\"\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"content-details\">\r\n                        <span className=\"circular-progress-bar\">\r\n                          <CircularProgressBar\r\n                            percent={moviesobject.vote_average * 10}\r\n                            linearGradient={[\"#18cdb5\", \"#1fb76d\"]}\r\n                            colorSlice={\"#081c22\"}\r\n                            colorCircle={\"#081c22\"}\r\n                            fontColor={\"#fff\"}\r\n                            fontSize={\"1.8rem\"}\r\n                            fontWeight={400}\r\n                            size={40}\r\n                            cut={0}\r\n                            rotation={-90}\r\n                            opacity={10}\r\n                            fill={\"#032541\"}\r\n                            unit={\"%\"}\r\n                            textPosition={\"0.35em\"}\r\n                          />\r\n                        </span>\r\n                        <div className=\"item-title\">\r\n                          {moviesobject.name || moviesobject.title}\r\n                        </div>\r\n                        <div className=\"item-score\">\r\n                          {moviesobject.release_date ||\r\n                            moviesobject.first_air_date}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              :<div style={{ display: \"flex\"}}>\r\n              <LoadingSkeleton/>\r\n              </div>}\r\n          </div>\r\n        </div>\r\n      }\r\n    </>\r\n  );\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport useStore from \"../Store/store\";\r\nimport { getTrailer, getTrendingDay, getTrendingWeek } from \"../API/api\";\r\nimport \"react-loading-skeleton/dist/skeleton.css\";\r\nimport { CircularProgressBar } from \"@tomik23/react-circular-progress-bar\";\r\nimport {} from \"react/cjs/react.production.min\";\r\nimport LoadingSkeleton from \"./LoadingSkeleton\";\r\n\r\nexport default function Trending() {\r\n  const setLoading = useStore((state) => state.setLoading);\r\n  const pagenumber = useStore((state) => state.pagenumber);\r\n  const trending = useStore((state) => state.trending);\r\n  const setTrending = useStore((state) => state.setTrending);\r\n  const setTrailerKey = useStore((state) => state.setTrailerKey);\r\n  const openModal = useStore((state) => state.openModal);\r\n  const [active, setActive] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getTrendingDay(pagenumber).then((movies) =>\r\n      setTrending(movies.data.results)\r\n    );\r\n    setLoading();\r\n    setActive(\"today\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pagenumber]);\r\n\r\n  const getTrendingDayData = () => {\r\n    getTrendingDay(pagenumber).then((items) => setTrending(items.data.results));\r\n    setActive(\"today\");\r\n  };\r\n  const getTrendingWeekData = () => {\r\n    getTrendingWeek(pagenumber).then((items) =>\r\n      setTrending(items.data.results)\r\n    );\r\n    setActive(\"week\");\r\n  };\r\n  const showTrailer = (id) => {\r\n    getTrailer(id).then((key) => setTrailerKey(key));\r\n    openModal();\r\n  };\r\n  return (\r\n    <>\r\n      {\r\n        <div className=\"container-fluid main-content\">\r\n          <div className=\"column_header\">\r\n            <div className=\"HeadingContainer\">\r\n              <span className=\"section-title\">Trending</span>\r\n            </div>\r\n            <div className=\"selector_wrapper \">\r\n              <div\r\n                className={`anchor ${active === \"today\" ? \"selected\" : null}`}\r\n                onClick={() => getTrendingDayData()}\r\n              >\r\n                Today\r\n              </div>\r\n\r\n              <div\r\n                className={`anchor ${active === \"week\" ? \"selected\" : null}`}\r\n                onClick={() => getTrendingWeekData()}\r\n              >\r\n                This Week\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-horizontal scroller_wrap should_fade\">\r\n            {trending.length ? (\r\n              trending.sort().map((moviesobject, i) => (\r\n                <div  key={i}>\r\n                  <div className=\"vertical-card card text-white m-2\">\r\n                    <div onClick={()=>showTrailer(moviesobject.id)}>\r\n                      <img\r\n                          className=\"movie-card img-fluid\"\r\n                          src={`https://image.tmdb.org/t/p/original${moviesobject.poster_path}`}\r\n                          alt=\"poster\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"content-details\">\r\n                      <span className=\"circular-progress-bar\">\r\n                        <CircularProgressBar\r\n                          percent={moviesobject.vote_average * 10}\r\n                          linearGradient={[\"#18cdb5\", \"#1fb76d\"]}\r\n                          colorSlice={\"#081c22\"}\r\n                          colorCircle={\"#081c22\"}\r\n                          fontColor={\"#fff\"}\r\n                          fontSize={\"1.8rem\"}\r\n                          fontWeight={400}\r\n                          size={40}\r\n                          cut={0}\r\n                          rotation={-90}\r\n                          opacity={10}\r\n                          fill={\"#032541\"}\r\n                          unit={\"%\"}\r\n                          textPosition={\"0.35em\"}\r\n                        />\r\n                      </span>\r\n                      <div className=\"item-title\">\r\n                        {moviesobject.title || moviesobject.name}\r\n                      </div>\r\n                      <div className=\"item-score\">\r\n                        {moviesobject.release_date ||\r\n                          moviesobject.first_air_date}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div style={{ display: \"flex\" }}>\r\n                <LoadingSkeleton />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      }\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport useStore from \"../Store/store\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\n\r\nexport default function VideoPlayer() {\r\n\r\n  const trailerKey = useStore((state) => state.trailerKey);\r\n  const modalIsOpen = useStore((state) => state.modalIsOpen);\r\n  const closeModal = useStore((state) => state.closeModal);\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        contentLabel=\"Example Modal\"\r\n      >\r\n        <div className=\"container-fluid\">\r\n        <p className=\"close-btn\" onClick={closeModal}>x</p>\r\n        <div className=\"watchScreen__player\">\r\n          <iframe\r\n            title={\"Video\"}\r\n            src={`https://www.youtube.com/embed/${trailerKey}`}\r\n            frameBorder={0}\r\n            allowFullScreen\r\n            width={\"100%\"}\r\n            height={\"100%\"}\r\n          ></iframe>\r\n        \r\n        </div>\r\n      </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport useStore from \"../Store/store\";\r\nimport {  getPopularMovies,  getOnRent,  getPopularTvShows,  getInTheaters,} from \"../API/api\";\r\nimport \"react-loading-skeleton/dist/skeleton.css\";\r\nimport { CircularProgressBar } from \"@tomik23/react-circular-progress-bar\";\r\nimport {} from \"react/cjs/react.production.min\";\r\nimport LoadingSkeleton from \"./LoadingSkeleton\";\r\nimport VideoPlayer from \"./VideoPlayer\"\r\nimport { useNavigate } from \"react-router-dom\";\r\n// import { useNavigate  } from \"react-router-dom\";\r\n\r\nexport default function WhatsPopulars() {\r\n  const setLoading = useStore((state) => state.setLoading);\r\n  const pagenumber = useStore((state) => state.pagenumber);\r\n  const populars = useStore((state) => state.populars);\r\n  const setPopulars = useStore((state) => state.setPopulars);\r\n  const setMediaId = useStore((state) => state.setMediaId);\r\n\r\n  const [active, setActive] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    getPopularMovies(pagenumber).then((movies) =>\r\n      setPopulars(movies.data.results)\r\n    );\r\n    setLoading();\r\n    setActive(\"Streaming\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pagenumber]);\r\n\r\n  const getMoviesData = () => {\r\n    getPopularMovies(pagenumber).then((mov) => setPopulars(mov.data.results));\r\n    setActive(\"Streaming\");\r\n  };\r\n  const getTvData = () => {\r\n    getPopularTvShows(pagenumber).then((tv) => setPopulars(tv.data.results));\r\n    setActive(\"tv\");\r\n  };\r\n  const getRentData = () => {\r\n    getOnRent(pagenumber).then((items) => setPopulars(items.data.results));\r\n    setActive(\"rent\");\r\n  };\r\n  const getInTheatersData = () => {\r\n    getInTheaters(pagenumber).then((mov) => setPopulars(mov.data.results));\r\n    setActive(\"theater\");\r\n  };\r\n  const showMediaDetails = (id) => {\r\n    setMediaId(id)\r\n    localStorage.setItem('movieid',id);\r\n    navigate(\"/details\")\r\n  };\r\n  return (\r\n    <>\r\n      {\r\n        <div className=\"container-fluid main-content \">\r\n          <div className=\"column_header\">\r\n            <div className=\"HeadingContainer\">\r\n              <span className=\"section-title\">What's Popular</span>\r\n            </div>\r\n            <div className=\"selector_wrapper  \">\r\n              <div\r\n                className={`anchor ${\r\n                  active === \"Streaming\" ? \"selected\" : \"\"\r\n                }`}\r\n                onClick={() => getMoviesData()}\r\n              >\r\n                Streaming\r\n              </div>\r\n\r\n              <div\r\n                className={`anchor ${active === \"tv\" ? \"selected\" : \"\"}`}\r\n                onClick={() => getTvData()}\r\n              >\r\n                On TV\r\n              </div>\r\n\r\n              <div\r\n                className={`anchor ${active === \"rent\" ? \"selected\" : \"\"}`}\r\n                onClick={() => getRentData()}\r\n              >\r\n                For Rent\r\n              </div>\r\n              <div\r\n                className={`anchor ${active === \"theater\" ? \"selected\" : \"\"}`}\r\n                onClick={() => getInTheatersData()}\r\n              >\r\n                In Theaters\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-horizontal scroller_wrap \">\r\n            {populars.length\r\n              ? populars.sort().map((moviesobject, i) => (\r\n                  <div key={i} >\r\n                    <div className=\"vertical-card card text-white m-2\" \r\n                    \r\n                    >\r\n                      <div onClick={() => showMediaDetails(moviesobject.id)}>\r\n                      <img\r\n                          className=\"movie-card img-fluid\"\r\n                          src={`https://image.tmdb.org/t/p/original${moviesobject.poster_path}`}\r\n                          alt=\"\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"content-details\">\r\n                        <span className=\"circular-progress-bar\">\r\n                          <CircularProgressBar\r\n                            percent={moviesobject.vote_average * 10}\r\n                            linearGradient={[\"#18cdb5\", \"#1fb76d\"]}\r\n                            colorSlice={\"#081c22\"}\r\n                            colorCircle={\"#081c22\"}\r\n                            fontColor={\"#fff\"}\r\n                            fontSize={\"1.8rem\"}\r\n                            fontWeight={400}\r\n                            size={40}\r\n                            cut={0}\r\n                            rotation={-90}\r\n                            opacity={10}\r\n                            fill={\"#032541\"}\r\n                            unit={\"%\"}\r\n                            textPosition={\"0.35em\"}\r\n                          />\r\n                        </span>\r\n                        <div className=\"item-title\">\r\n                          {moviesobject.name || moviesobject.title}\r\n                        </div>\r\n                        <div className=\"item-score\">\r\n                          {moviesobject.release_date ||\r\n                            moviesobject.first_air_date}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              : <div style={{ display: \"flex\"}}>\r\n              <LoadingSkeleton/>\r\n              </div>}\r\n          </div>\r\n          <VideoPlayer/>\r\n        </div>\r\n      }\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport useStore from \"../Store/store\";\r\nimport FreeToWatch from \"./Free to Watch\";\r\nimport Trending from \"./Trending\";\r\nimport WhatsPopulars from \"./WhatsPopulars\";\r\n\r\nexport default function HomeContent() {\r\n  // const currenttext = useStore((state) => state.currenttext);\r\n  // const setCurrenttext = useStore((state) => state.setCurrenttext);\r\n  const populars = useStore((state) => state.populars);\r\n\r\n  const backgroundImage = populars.map((img) => img.backdrop_path)[\r\n    Math.floor(Math.random() * populars.length)\r\n  ];\r\n  \r\n  const handleSubmit = (e) => e.preventDefault();\r\n  return (\r\n    <div className=\"page-layout container-fluid \">\r\n      <div\r\n        className=\"inner_content banner\"\r\n        style={{\r\n          backgroundImage: `linear-gradient(to right,\r\n            rgba(3, 84, 114, 0.884),rgba(4, 88, 116, 0.795)),\r\n    url(\"https://image.tmdb.org/t/p/original${backgroundImage}\")`,\r\n        }}\r\n      >\r\n        <div className=\"column_wrapper\">\r\n          <div className=\"content_wrapper wrap\">\r\n            <div className=\"title\">\r\n              <h2>Welcome.</h2>\r\n              <h3>\r\n                Millions of movies, TV shows and people to discover. Explore\r\n                now.\r\n              </h3>\r\n            </div>\r\n\r\n            <div>\r\n              <form\r\n                className=\"search\"\r\n                style={{ display: \"flex\", marginTop: \"30px\" }}\r\n                onSubmit={handleSubmit}\r\n              >\r\n                <input\r\n                  className=\"form-control search-box\"\r\n                  type=\"search\"\r\n                  placeholder=\"Search\"\r\n                  aria-label=\"Search\"\r\n                  // value={currenttext}\r\n                  // onChange={(e) => setCurrenttext(e.target.value)}\r\n                />\r\n                <button className=\"search-button\">Search</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <WhatsPopulars />\r\n      <FreeToWatch />\r\n      <Trending />\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable jsx-a11y/anchor-has-content */\r\nimport React, { useEffect , useState } from \"react\";\r\nimport { getMediaDetails, getTrailer } from \"../API/api\";\r\nimport useStore from \"../Store/store\";\r\nimport VideoPlayer from \"./VideoPlayer\";\r\n\r\nexport const MediaDetails = () => {\r\n  const mediaId = localStorage.getItem(\"movieid\");\r\n  const mediaDetails = useStore((state) => state.mediaDetails);\r\n  const setMediaDetails = useStore((state) => state.setMediaDetails);\r\n  const setTrailerKey = useStore((state) => state.setTrailerKey);\r\n  const openModal = useStore((state) => state.openModal);\r\n\r\n  console.log(\"Media\", mediaDetails);\r\n  useEffect(() => {\r\n    getMediaDetails(mediaId).then((items) => {\r\n      setMediaDetails(items.data);\r\n  \r\n    });\r\n  }, []);\r\n\r\n  const showTrailer = (id) => {\r\n    getTrailer(id).then((key) => setTrailerKey(key));\r\n    openModal();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid wrap\">\r\n      <div\r\n        className=\"row\"\r\n        style={{\r\n          backgroundImage: `linear-gradient(to right, rgba(3, 10, 7, 0.82),rgba(4, 8, 6, 0.75))`,\r\n        }}\r\n      >\r\n        {mediaDetails.length ? \r\n        <>\r\n          <div className=\"media-title col-12 info-section\">\r\n            <h1>\r\n              {mediaDetails?.title}{\" \"}\r\n              <span className=\"release_date\">\r\n                ({mediaDetails.release_date})\r\n              </span>{\" \"}\r\n            </h1>\r\n            <h3 style={{cursor:\"pointer\"}} onClick={() => showTrailer(mediaDetails.id)}>Watch Trailer</h3>\r\n          </div>\r\n\r\n        <div className=\"col-sm-3 poster-section\">\r\n          <div className=\"poster\">\r\n            <img \r\n              className=\"img-fluid\"\r\n              src={`https://image.tmdb.org/t/p/original${mediaDetails.poster_path}`}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <div className=\"streaming-platform\">Watch Now</div>\r\n        </div>\r\n        <div className=\"col-sm-9 info-section\">\r\n          <div className=\"mdeia-genre-info\">\r\n            {mediaDetails.genres.map((gen, i) => (\r\n              <span key={i}> '{gen.name}' </span>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"user-section\">\r\n            <p>User Rating : {mediaDetails.vote_average}/10 </p>\r\n          </div>\r\n          <div className=\"overview-section\">\r\n            Overview: {mediaDetails.overview}\r\n          </div>\r\n        </div>\r\n        </> : \r\n         <h1>\"Loading..\"\r\n         </h1> \r\n        }\r\n         \r\n      </div>\r\n      <VideoPlayer/>\r\n    </div>\r\n  );\r\n};\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <header>\r\n      <div className=\"container-fluid content\">\r\n        <div className=\"nav-menu\">\r\n          <div className=\"submenu-left\">\r\n          <span>\r\n            <a to=\"/\">\r\n              <img height=\"20px\" \r\n              src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_short-8e7b30f73a4020692ccca9c88bafe5dcb6f8a62a4c6bc55cd9ba82bb2cd95f6c.svg\"\r\n              alt=\"logo\" />\r\n            </a>\r\n          </span>\r\n          <span className=\"nav-link\">\r\n          <a to=\"/\" className=\"link\">\r\n              Movies\r\n            </a>\r\n            <a to=\"/\" className=\"link\">\r\n              TV Shows\r\n            </a>\r\n            <a to=\"/\" className=\"link\">\r\n              More\r\n            </a>\r\n          </span>\r\n           \r\n          </div>\r\n          <div className=\"submenu-right\">\r\n            <a\r\n              to=\"/\"\r\n              className=\"link\"\r\n              style={{\r\n                border: \"0.5px solid white\",\r\n                borderRadius: \"5px\",\r\n                padding: \"3px\",\r\n              }}\r\n            >\r\n              EN\r\n            </a>\r\n            <a to=\"/\" className=\"link\">\r\n              Login\r\n            </a>\r\n            <a to=\"/\" className=\"link\">\r\n              Join TMDB\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function SignUp() {\r\n  return (\r\n    <div>SignUp</div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Favouritelist from \"../components/Favouritelist\";\r\nimport Footer from \"../components/Footer\";\r\nimport HomeContent from \"../components/HomeContent\";\r\nimport { MediaDetails } from \"../components/MediaDetails\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport SignUp from \"../components/SignUp\";\r\n\r\nexport default function MainRoutes() {\r\n  return (\r\n    <>\r\n    <Navbar />\r\n    <Routes>\r\n      <Route path=\"/\" element={<HomeContent />} />\r\n      <Route path=\"/favouritelist\" element={<Favouritelist />} />\r\n      <Route path=\"/signup\" element={<SignUp/>} />\r\n      <Route path=\"/details\" element={<MediaDetails/>} />\r\n    </Routes>\r\n    <Footer/>\r\n    </>\r\n  );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from \"react-router-dom\";\nimport MainRoutes from './Router/Routes';\nimport \"./App.css\";\n\nReactDOM.render(\n  <BrowserRouter  basename='/tmdb-clone'>\n    <MainRoutes/>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// return data.data.results.map(key => key.name === \"Official Trailer\")[0].key"],"sourceRoot":""}